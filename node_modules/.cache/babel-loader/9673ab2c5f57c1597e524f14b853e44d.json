{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/task-detail/question-section/question-section.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport ToggleTextbox from \"../../../../../components/toggle-textbox/toggle-textbox\";\nimport TextEditor from \"../../../../../components/text-editor/text-editor\";\nimport { get_time_diff } from \"../../../../../utils/time-difference\";\nimport { connect } from \"react-redux\"; // TODO @SONIA\n\nclass QuestionBoxSection extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const {\n      pathname\n    } = this.props.location;\n    const userEmail = this.props.user.email;\n    const {\n      posterName,\n      questions\n    } = this.props.taskDetail.taskData;\n    return React.createElement(\"div\", {\n      className: \"task-detail__question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"splitter-section-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Questions(\", questions && questions.length !== 0 ? questions.length : 0 //  + questions.reduce((accum, current) => accum + current.replies.length,0)\n    , \")\"), React.createElement(\"div\", {\n      className: \"small-title bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Please don't share personal info \\u2013 insurance won't apply to tasks not done through Airtasker!\"), userEmail ? React.createElement(TextEditor, {\n      targetPerson: posterName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"padder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"To join the conversation\"), React.createElement(Link, {\n      className: \"green-button\",\n      to: `${pathname}/signup`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Sign Up\"), \"or\", React.createElement(Link, {\n      className: \"green-button\",\n      to: `${pathname}/login`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Log In\")), questions && questions.map((question, index) => React.createElement(React.Fragment, null, React.createElement(ToggleTextbox, {\n      message: question,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), question.replies.map((message, index) => React.createElement(\"div\", {\n      className: \"task-detail__offer--reply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: message.photo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"poster-detail__item--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-name-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\",\n      className: \"user-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, message.username)), message.messageContent, React.createElement(\"div\", {\n      className: \"toggle-textbox__message--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, get_time_diff(message.postDate), \" ago\"), userEmail && React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Reply\"))))))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  taskDetail: state.taskDetail\n}), {})(withRouter(QuestionBoxSection));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/task-detail/question-section/question-section.js"],"names":["React","Link","withRouter","ToggleTextbox","TextEditor","get_time_diff","connect","QuestionBoxSection","Component","constructor","render","pathname","props","location","userEmail","user","email","posterName","questions","taskDetail","taskData","length","map","question","index","replies","message","photo","username","messageContent","postDate","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport ToggleTextbox from \"../../../../../components/toggle-textbox/toggle-textbox\";\nimport TextEditor from \"../../../../../components/text-editor/text-editor\"\nimport { get_time_diff } from \"../../../../../utils/time-difference\";\nimport { connect } from \"react-redux\"\n// TODO @SONIA\n\nclass QuestionBoxSection extends React.Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        const { pathname } = this.props.location;\n        const userEmail = this.props.user.email;\n        const { posterName, questions } = this.props.taskDetail.taskData;\n\n        return (\n            <div className=\"task-detail__question\">\n                <div className=\"splitter-section-name\">\n                    Questions({\n                        questions && questions.length !== 0 ? questions.length : 0  //  + questions.reduce((accum, current) => accum + current.replies.length,0)\n                    })\n                </div>\n                <div className=\"small-title bold\">\n                    Please don't share personal info â€“ insurance won't apply to tasks not done through Airtasker!\n                </div>\n\n                {userEmail\n                    ?\n                    <TextEditor targetPerson={posterName} />\n                    :\n                    <div className=\"padder\">\n                        <h4>To join the conversation</h4>\n                        <Link className=\"green-button\" to={`${pathname}/signup`}>\n                            Sign Up\n                        </Link>\n                        or\n                        <Link className=\"green-button\" to={`${pathname}/login`}>\n                            Log In\n                        </Link>\n                    </div>\n                }\n\n                {questions && questions.map((question, index) => (\n                    <>\n                        <ToggleTextbox message={question} key={index} />\n                        {question.replies.map((message, index) => (\n                            <div className=\"task-detail__offer--reply\">\n                                <div className=\"avatar-image\">\n                                    <img src={message.photo} alt=\"\" />\n                                </div>\n                                <div className=\"poster-detail__item--detail\">\n                                    <div className=\"user-name-holder\">\n                                        <Link to=\"\" className=\"user-name\">\n                                            {message.username}\n                                        </Link>\n                                    </div>\n                                    {message.messageContent}\n                                    <div className=\"toggle-textbox__message--bottom\"><span>{get_time_diff(message.postDate)} ago</span>\n                                        {userEmail && <Link>Reply</Link>}\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </>\n                ))\n                }\n            </div>\n        );\n    }\n}\nexport default connect(state => ({ user: state.user, taskDetail: state.taskDetail }), {})(withRouter(QuestionBoxSection))\n"]},"metadata":{},"sourceType":"module"}