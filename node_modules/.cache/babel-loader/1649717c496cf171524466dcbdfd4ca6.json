{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'; // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// TODO @DAVIN\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport class MapBox extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose(this);\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      style: mapStyles,\n      initialCenter: {\n        lat: -1.2884,\n        lng: 36.8233\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox); // export default class MapBox extends Component {\n//   render() {\n//     return (\n//     <div>Map</div>           \n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","mapStyles","width","height","MapBox","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","bind","render","google","lat","lng","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA2D,mBAA3D,C,CACA;AACA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AACpCS,EAAAA,WAAW,CAACC,MAAD,EAAO;AAChB,UAAMA,MAAN;;AADgB,SAUlBC,aAVkB,GAUF,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KAChB,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEL,KADH;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAXkB;;AAAA,SAiBlBC,OAjBkB,GAiBRR,KAAK,IAAI;AACjB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAxBiB;;AAEhB,SAAKG,KAAL,GAAa;AACXF,MAAAA,iBAAiB,EAAE,KADR;AACgB;AAC3BD,MAAAA,YAAY,EAAE,EAFH;AAEgB;AAC3BD,MAAAA,aAAa,EAAE,EAHJ,CAGgB;;AAHhB,KAAb;AAKA,SAAKJ,aAAL,GAAmB,KAAKA,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAAnB;AACA,SAAKF,OAAL,GAAe,KAAKA,OAAL,CAAa,IAAb,CAAf;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MADrB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAEjB,SAHT;AAIE,MAAA,aAAa,EAAE;AACdkB,QAAAA,GAAG,EAAE,CAAC,MADQ;AAEdC,QAAAA,GAAG,EAAE;AAFS,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAtCmC;AAyCtC,eAAetB,gBAAgB,CAAC;AAC9BuB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZjB,MAFY,CAAf,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker  } from 'google-maps-react';\n// import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// TODO @DAVIN\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapBox extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n    };\n    this.onMarkerClick=this.onMarkerClick.bind(this);\n    this.onClose = this.onClose(this);\n  }\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={{\n         lat: -1.2884,\n         lng: 36.8233\n        }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\n// export default class MapBox extends Component {\n//   render() {\n//     return (\n//     <div>Map</div>           \n    \n//     );\n  \n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}