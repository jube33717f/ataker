{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport { connect } from 'react-redux';\nimport { changeDistance, changePrice, changeLocation } from '../../redux/actions'; // TODO @JUbi\n// const mapStyles = {\n//   map: {\n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n//     opacity:'0.85'\n//   }\n// }\n\nexport class MapBox extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      markers: [false, false, false],\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      changed: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(prevState,';;;',prevState)\n    if (prevProps.locations !== this.props.locations) {\n      console.log(\"changed\");\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    //const {location}=this.props;\n    console.log(this.props.locations);\n    return React.createElement(\"div\", {\n      className: \"mapbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, Object.assign({\n      centerAroundCurrentLocation: true,\n      google: this.props.google\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.props.locations === [] ? React.createElement(Marker, {\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : React.createElement(Marker, {\n      address: this.props.locations,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      address: this.props.locations //position={{ lat: -33.918551, lng:  151.219999 }}\n      ,\n      onClick: this.onMarkerClick,\n      name: 'Prenuptial agreement',\n      time: 'Due in 1 day',\n      poster: 'Posted by Piyush S. 13 mins ago',\n      price: '$80',\n      profilephoto: 'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"View Task\")))), React.createElement(Marker, {\n      position: {\n        lat: -33.900128,\n        lng: 151.224562\n      },\n      onClick: this.onMarkerClick,\n      name: 'Wall mount 65 inch TV',\n      price: '$50',\n      time: 'Due in 6 hours',\n      poster: 'post by Purushi,21 hours ago',\n      profilephoto: 'https://pbs.twimg.com/media/Dyg-PPzXcAAY5Wv?format=jpg&name=small',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"View Task\")))), React.createElement(Marker, {\n      className: \"mapbox__maker\" //address={[{long_name:\"Kensington\",short_name:\"Kensington\"},{long_name:\"Randwick City Council\",short_name:\"Randwick\"},{long_name:\"New South Wales\",short_name:\"NSW\"},{long_name:\"Australia\",short_name:\"AU\"},{long_name:\"2033\",short_name:\"2033\"}]}\n      ,\n      position: {\n        lat: -33.912605,\n        lng: 151.235999\n      },\n      onClick: this.onMarkerClick,\n      name: 'Tree looper with tree mulcher',\n      price: '$140',\n      time: 'Due 12 hours ago',\n      poster: 'post by papa H,21 hours ago',\n      profilephoto: 'https://pbs.twimg.com/media/Dyg6-4xWoAEUNut?format=jpg&name=small',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"EARN\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"View Task\"))))));\n  }\n\n} // GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n  return {\n    locations: state.locations.locations,\n    distance: state.distance.distance,\n    price: state.price.price\n  };\n}\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\nexport default connect(mapStateToProps, {\n  changeDistance,\n  changePrice,\n  changeLocation\n})(MapBox); // export default","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","Geocoder","CurrentLocation","markerIcon","connect","changeDistance","changePrice","changeLocation","MapBox","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","markers","changed","componentDidUpdate","prevProps","prevState","locations","console","log","forceUpdate","render","google","profilephoto","price","name","time","poster","lat","lng","mapStateToProps","distance","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker,Geocoder  } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon  from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport { connect } from 'react-redux';\nimport { changeDistance,changePrice,changeLocation } from '../../redux/actions'\n// TODO @JUbi\n// const mapStyles = {\n//   map: {\n    \n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n    \n//     opacity:'0.85'\n//   }\n// }\n\nexport class MapBox extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        markers:[false,false,false],\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {} ,         //Shows the infoWindow to the selected place upon a marker\n        changed:false\n    };\n  }\n  \n  componentDidUpdate(prevProps, prevState){\n    // console.log(prevState,';;;',prevState)\n    if(prevProps.locations!==this.props.locations){\n        console.log(\"changed\")\n        this.forceUpdate();\n    }\n  }\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    //const {location}=this.props;\n\n    console.log(this.props.locations)\n    return (\n      <div className=\"mapbox\">\n        <CurrentLocation\n          centerAroundCurrentLocation\n          google={this.props.google}\n          {...this.props}\n        >\n          {/* <Marker  address={this.props.locations} name={'current location'} /> */}\n          {this.props.locations===[]?<Marker  name={'current location'} />:<Marker  address={this.props.locations} name={'current location'} />}\n          \n          <Marker\n              address={this.props.locations}\n              //position={{ lat: -33.918551, lng:  151.219999 }}\n              onClick={this.onMarkerClick}\n              name={'Prenuptial agreement'} \n              time={'Due in 1 day'}\n              poster={'Posted by Piyush S. 13 mins ago'}\n              price={'$80'}\n              profilephoto={'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow>\n          <Marker\n              position={{ lat: -33.900128, lng:  151.224562 }}\n              onClick={this.onMarkerClick}\n              name={'Wall mount 65 inch TV'} \n              price={'$50'}\n              time={'Due in 6 hours'}\n              poster={'post by Purushi,21 hours ago'}\n              profilephoto={'https://pbs.twimg.com/media/Dyg-PPzXcAAY5Wv?format=jpg&name=small'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow>\n          <Marker\n              className=\"mapbox__maker\"\n              //address={[{long_name:\"Kensington\",short_name:\"Kensington\"},{long_name:\"Randwick City Council\",short_name:\"Randwick\"},{long_name:\"New South Wales\",short_name:\"NSW\"},{long_name:\"Australia\",short_name:\"AU\"},{long_name:\"2033\",short_name:\"2033\"}]}\n              position={{ lat: -33.912605, lng:  151.235999 }}\n              onClick={this.onMarkerClick}\n              name={'Tree looper with tree mulcher'} \n              price={'$140'}\n              time={'Due 12 hours ago'}\n              poster={'post by papa H,21 hours ago'}\n              profilephoto={'https://pbs.twimg.com/media/Dyg6-4xWoAEUNut?format=jpg&name=small'}\n              icon={markerIcon}\n          />\n          {/* //-33.900128, 151.224562 */}\n          <InfoWindow\n            \n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\"><p>EARN</p><span>{this.state.selectedPlace.price}</span></div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n                </div>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        \n        \n      </div>\n    );\n  }\n}\n\n// GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n    return {\n      locations: state.locations.locations,\n      distance: state.distance.distance,\n      price: state.price.price,\n    }\n}\n  \nGoogleApiWrapper({\n    apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\nexport default connect(mapStateToProps, {\n    changeDistance,changePrice,changeLocation\n})(MapBox);\n\n// export default "]},"metadata":{},"sourceType":"module"}