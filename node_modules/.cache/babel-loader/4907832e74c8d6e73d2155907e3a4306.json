{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/components/toggle-textbox/toggle-textbox.js\";\nimport React, { Component } from \"react\";\nimport \"./toggle-textbox.scss\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { get_time_diff } from \"../../utils/time-difference\";\nimport OfferMsgComponent from \"./offerMsgComponent\"; // TODO @SONIA\n\nclass ToggleTextbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pushToGeneratedUrl = (pathname, data) => {\n      // 不知为什么这里不能通过location.state传递参数\n      // this.props.history.push(`${this.props.match.url}/${pathname}`, { data });\n      if (data.offerId) {\n        this.props.history.push(`${this.props.match.url}/${pathname}-offer-${data.offerId}`);\n      } else if (data.questionId) {\n        this.props.history.push(`${this.props.match.url}/${pathname}-question-${data.questionId}`);\n      }\n    };\n\n    this.state = {\n      message: {},\n      detail: \"\",\n      toggle: true,\n      overflow: false\n    };\n    this.messageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.messageRef.current.style.maxHeight = \"120px\";\n    this.setState(this.props);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.setState(this.props);\n      this.messageRef.current.style.maxHeight = \"120px\"; //一定要加上这一行，不然maxheight是之前mount的元素的？\n\n      this.setState({\n        overflow: false,\n        toggle: true\n      });\n    }\n\n    if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n      if (Number(this.messageRef.current.scrollHeight) > Number(this.messageRef.current.style.maxHeight.substr(0, this.messageRef.current.style.maxHeight.length - 2))) {\n        this.setState({\n          overflow: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      message,\n      toggle,\n      detail,\n      overflow\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toggle-textbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.messageRef,\n      className: `toggle-textbox__message ${toggle && overflow && 'toggle-textbox__message--blur'}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, Object.keys(message).length !== 0 ? React.createElement(OfferMsgComponent, {\n      message: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : detail, (!toggle || overflow) && React.createElement(\"button\", {\n      onClick: () => {\n        if (toggle) {\n          if (Number(this.messageRef.current.scrollHeight) > Number(this.messageRef.current.style.maxHeight.substr(0, this.messageRef.current.style.maxHeight.length - 2))) {\n            this.messageRef.current.style.maxHeight = this.messageRef.current.scrollHeight + 'px';\n          }\n        } else {\n          this.messageRef.current.style.maxHeight = \"120px\";\n        }\n\n        this.setState({\n          toggle: !toggle\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, toggle ? 'More' : 'Less', React.createElement(FontAwesomeIcon, {\n      icon: faChevronDown,\n      className: \"arrow-icon\",\n      style: {\n        transform: toggle ? '' : 'rotate(180deg)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        marginTop: !toggle || overflow ? '22px' : ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, Object.keys(message).length !== 0 && React.createElement(\"div\", {\n      className: \"toggle-textbox__message--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, get_time_diff(message.postDate), \" ago\"), this.props.user.email && React.createElement(Link, {\n      onClick: () => {\n        this.pushToGeneratedUrl('reply', {\n          offerId: this.props.offerId,\n          questionId: this.props.questionId\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Reply\"))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  login\n})(withRouter(ToggleTextbox));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/components/toggle-textbox/toggle-textbox.js"],"names":["React","Component","withRouter","Link","connect","login","FontAwesomeIcon","faChevronDown","get_time_diff","OfferMsgComponent","ToggleTextbox","constructor","props","pushToGeneratedUrl","pathname","data","offerId","history","push","match","url","questionId","state","message","detail","toggle","overflow","messageRef","createRef","componentDidMount","current","style","maxHeight","setState","componentDidUpdate","prevProps","prevState","JSON","stringify","Number","scrollHeight","substr","length","render","Object","keys","transform","marginTop","postDate","user","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CACA;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,kBAtBmB,GAsBE,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACvC;AACA;AAEA,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAyB,GAAE,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,GAAI,IAAGN,QAAS,UAASC,IAAI,CAACC,OAAQ,EAAlF;AACD,OAFD,MAEO,IAAID,IAAI,CAACM,UAAT,EAAqB;AAC1B,aAAKT,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAyB,GAAE,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,GAAI,IAAGN,QAAS,aAAYC,IAAI,CAACM,UAAW,EAAxF;AACD;AACF,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,MAAM,EAAE,EAAvB;AAA2BC,MAAAA,MAAM,EAAE,IAAnC;AAAyCC,MAAAA,QAAQ,EAAE;AAAnD,KAAb;AACA,SAAKC,UAAL,GAAkB3B,KAAK,CAAC4B,SAAN,EAAlB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,GAA0C,OAA1C;AACA,SAAKC,QAAL,CAAc,KAAKrB,KAAnB;AACD;;AACDsB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIC,IAAI,CAACC,SAAL,CAAeH,SAAf,MAA8BE,IAAI,CAACC,SAAL,CAAe,KAAK1B,KAApB,CAAlC,EAA8D;AAC5D,WAAKqB,QAAL,CAAc,KAAKrB,KAAnB;AACA,WAAKe,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,GAA0C,OAA1C,CAF4D,CAET;;AACnD,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE,KAAZ;AAAmBD,QAAAA,MAAM,EAAE;AAA3B,OAAd;AACD;;AACD,QAAIY,IAAI,CAACC,SAAL,CAAeF,SAAf,MAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAApB,CAAlC,EAA8D;AAC5D,UAAIiB,MAAM,CAAC,KAAKZ,UAAL,CAAgBG,OAAhB,CAAwBU,YAAzB,CAAN,GAA+CD,MAAM,CAAC,KAAKZ,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,CAAwCS,MAAxC,CAA+C,CAA/C,EAAkD,KAAKd,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,CAAwCU,MAAxC,GAAiD,CAAnG,CAAD,CAAzD,EAAkK;AAChK,aAAKT,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF;AACF;;AAcDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,OAAF;AAAWE,MAAAA,MAAX;AAAmBD,MAAAA,MAAnB;AAA2BE,MAAAA;AAA3B,QAAwC,KAAKJ,KAAnD;AAEA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKK,UAAf;AAA2B,MAAA,SAAS,EAAG,2BAA2BF,MAAM,IAAIC,QAAX,IAAwB,+BAAgC,EAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,MAAM,CAACC,IAAP,CAAYtB,OAAZ,EAAqBmB,MAArB,KAAgC,CAAhC,GAEC,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAEnB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,GAICC,MALJ,EAOG,CAAC,CAACC,MAAD,IAAWC,QAAZ,KAEC;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,YAAID,MAAJ,EAAY;AACV,cAAIc,MAAM,CAAC,KAAKZ,UAAL,CAAgBG,OAAhB,CAAwBU,YAAzB,CAAN,GAA+CD,MAAM,CAAC,KAAKZ,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,CAAwCS,MAAxC,CAA+C,CAA/C,EAAkD,KAAKd,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,CAAwCU,MAAxC,GAAiD,CAAnG,CAAD,CAAzD,EAAkK;AAChK,iBAAKf,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,GAA0C,KAAKL,UAAL,CAAgBG,OAAhB,CAAwBU,YAAxB,GAAuC,IAAjF;AACD;AACF,SAJD,MAIO;AACL,eAAKb,UAAL,CAAgBG,OAAhB,CAAwBC,KAAxB,CAA8BC,SAA9B,GAA0C,OAA1C;AACD;;AACD,aAAKC,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE,CAACA;AAAX,SAAd;AACD,OATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGA,MAAM,GAAG,MAAH,GAAY,MAVrB,EAWE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAElB,aAAvB;AAAsC,MAAA,SAAS,EAAC,YAAhD;AAA6D,MAAA,KAAK,EAAE;AAAEuC,QAAAA,SAAS,EAAErB,MAAM,GAAG,EAAH,GAAQ;AAA3B,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CATJ,CADF,CADM,EA4BN;AAAK,MAAA,KAAK,EAAE;AAAEsB,QAAAA,SAAS,EAAG,CAACtB,MAAD,IAAWC,QAAZ,GAAwB,MAAxB,GAAiC;AAA9C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,MAAM,CAACC,IAAP,CAAYtB,OAAZ,EAAqBmB,MAArB,KAAgC,CAAhC,IAEC;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOlC,aAAa,CAACe,OAAO,CAACyB,QAAT,CAApB,SAAjD,EACG,KAAKpC,KAAL,CAAWqC,IAAX,CAAgBC,KAAhB,IAAyB,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKrC,kBAAL,CAAwB,OAAxB,EAAiC;AAAEG,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OAAtB;AAA+BK,UAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWS;AAAtD,SAAjC;AAAuG,OAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD5B,CAHJ,CA5BM,CAAR;AAuCD;;AA7EmC;;AA+EtC,eAAejB,OAAO,CAACkB,KAAK,KAAK;AAAE2B,EAAAA,IAAI,EAAE3B,KAAK,CAAC2B;AAAd,CAAL,CAAN,EAAkC;AAAE5C,EAAAA;AAAF,CAAlC,CAAP,CACbH,UAAU,CAACQ,aAAD,CADG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./toggle-textbox.scss\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { get_time_diff } from \"../../utils/time-difference\"\nimport OfferMsgComponent from \"./offerMsgComponent\"\n// TODO @SONIA\n\nclass ToggleTextbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: {}, detail: \"\", toggle: true, overflow: false };\n    this.messageRef = React.createRef();\n  }\n  componentDidMount() {\n    this.messageRef.current.style.maxHeight = \"120px\";\n    this.setState(this.props);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.setState(this.props);\n      this.messageRef.current.style.maxHeight = \"120px\"; //一定要加上这一行，不然maxheight是之前mount的元素的？\n      this.setState({ overflow: false, toggle: true });\n    }\n    if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n      if (Number(this.messageRef.current.scrollHeight) > Number(this.messageRef.current.style.maxHeight.substr(0, this.messageRef.current.style.maxHeight.length - 2))) {\n        this.setState({ overflow: true })\n      }\n    }\n  }\n\n  pushToGeneratedUrl = (pathname, data) => {\n    // 不知为什么这里不能通过location.state传递参数\n    // this.props.history.push(`${this.props.match.url}/${pathname}`, { data });\n\n    if (data.offerId) {\n      this.props.history.push(`${this.props.match.url}/${pathname}-offer-${data.offerId}`);\n    } else if (data.questionId) {\n      this.props.history.push(`${this.props.match.url}/${pathname}-question-${data.questionId}`);\n    }\n  }\n\n\n  render() {\n    const { message, toggle, detail, overflow } = this.state;\n\n    return (<div>\n      <div className=\"toggle-textbox\">\n        <div ref={this.messageRef} className={`toggle-textbox__message ${(toggle && overflow) && 'toggle-textbox__message--blur'}`} >\n          {Object.keys(message).length !== 0\n            ?\n            <OfferMsgComponent message={message} />\n            :\n            detail}\n\n          {(!toggle || overflow)\n            &&\n            <button onClick={() => {\n              if (toggle) {\n                if (Number(this.messageRef.current.scrollHeight) > Number(this.messageRef.current.style.maxHeight.substr(0, this.messageRef.current.style.maxHeight.length - 2))) {\n                  this.messageRef.current.style.maxHeight = this.messageRef.current.scrollHeight + 'px';\n                }\n              } else {\n                this.messageRef.current.style.maxHeight = \"120px\";\n              }\n              this.setState({ toggle: !toggle });\n            }}>\n              {toggle ? 'More' : 'Less'}\n              <FontAwesomeIcon icon={faChevronDown} className=\"arrow-icon\" style={{ transform: toggle ? '' : 'rotate(180deg)' }} />\n            </button>\n          }\n        </div>\n\n      </div>\n      <div style={{ marginTop: (!toggle || overflow) ? '22px' : '' }}>\n        {Object.keys(message).length !== 0\n          &&\n          <div className=\"toggle-textbox__message--bottom\"><span>{get_time_diff(message.postDate)} ago</span>\n            {this.props.user.email && <Link onClick={() => { this.pushToGeneratedUrl('reply', { offerId: this.props.offerId, questionId: this.props.questionId }); }}>Reply</Link>}\n\n          </div>\n        }\n      </div>\n    </div>\n    );\n  }\n}\nexport default connect(state => ({ user: state.user }), { login })(\n  withRouter(ToggleTextbox)\n);\n"]},"metadata":{},"sourceType":"module"}