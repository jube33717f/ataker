{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/bank-detail.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reqUpdateUser } from \"../../../../../api/api\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\"; // TODO @SONIA\n\nclass BankDetail extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    this.props.setInitialData(this.props.userData);\n  }\n\n  render() {\n    const {\n      name,\n      accountNumber,\n      accountBsb\n    } = this.props.values;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Please provide your bank details so you can get paid. We don't take any money from your account.\"), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Account holder name\"), React.createElement(\"input\", {\n      className: this.props.errors.name ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"name\",\n      id: \"name\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: name //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.errors.name)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"accountNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Account number\"), React.createElement(\"input\", {\n      className: this.props.errors.accountNumber ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"accountNumber\",\n      id: \"accountNumber\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: accountNumber //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.errors.accountNumber)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"accountBsb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Bsb\"), React.createElement(\"input\", {\n      className: this.props.errors.accountBsb ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"accountBsb\",\n      id: \"accountBsb\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: accountBsb //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.errors.accountBsb)), React.createElement(\"button\", {\n      className: \"green-button\",\n      onClick: async () => {\n        await this.props.checkValidationErrors();\n\n        if (await this.props.okToSubmit()) {\n          const result = await reqUpdateUser(this.props.user.email, {\n            bankDetail: this.props.values\n          });\n\n          if (result.status === 0) {\n            alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(ValidationHoc(BankDetail, [\"name\", \"accountNumber\", \"accountBsb\"]));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/bank-detail.js"],"names":["React","Component","withRouter","connect","reqUpdateUser","ValidationHoc","BankDetail","constructor","componentDidMount","props","setInitialData","userData","render","name","accountNumber","accountBsb","values","errors","e","onChange","Object","keys","length","checkValidationErrors","okToSubmit","result","user","email","bankDetail","status","alert","JSON","stringify","data","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reqUpdateUser } from \"../../../../../api/api\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\";\n\n// TODO @SONIA\n\nclass BankDetail extends React.Component {\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        this.props.setInitialData(this.props.userData)\n    }\n\n    render() {\n        const { name, accountNumber, accountBsb } = this.props.values;\n        return (\n            <div>\n                <p>Please provide your bank details so you can get paid. We don't take any money from your account.</p>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"name\">Account holder name</label>\n                    <input className={this.props.errors.name ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"name\"\n                        id=\"name\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={name} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.name}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"accountNumber\">Account number</label>\n                    <input className={this.props.errors.accountNumber ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"accountNumber\"\n                        id=\"accountNumber\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={accountNumber} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.accountNumber}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"accountBsb\">Bsb</label>\n                    <input className={this.props.errors.accountBsb ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"accountBsb\"\n                        id=\"accountBsb\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={accountBsb} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.accountBsb}</div>\n                </div>\n                <button className=\"green-button\"\n                    onClick={async () => {\n                        await this.props.checkValidationErrors();\n                        if (await this.props.okToSubmit()) {\n                            const result = await reqUpdateUser(this.props.user.email, { bankDetail: this.props.values });\n                            if (result.status === 0) {\n                                alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n                            }\n                        }\n                    }}\n                >\n                    Add\n                </button>\n            </div>\n\n\n        );\n    }\n}\nexport default connect(state => ({ user: state.user }), {})(\n    ValidationHoc(BankDetail, [\"name\", \"accountNumber\", \"accountBsb\"])\n);"]},"metadata":{},"sourceType":"module"}