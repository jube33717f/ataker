{"ast":null,"code":"/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\nvar debug = require('debug')('koa-router');\n\nvar compose = require('koa-compose');\n\nvar HttpError = require('http-errors');\n\nvar methods = require('methods');\n\nvar Layer = require('./layer');\n/**\n * @module koa-router\n */\n\n\nmodule.exports = Router;\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) {\n    return new Router(opts);\n  }\n\n  this.opts = opts || {};\n  this.methods = this.opts.methods || ['HEAD', 'OPTIONS', 'GET', 'PUT', 'PATCH', 'POST', 'DELETE'];\n  this.params = {};\n  this.stack = [];\n}\n\n;\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * const forums = new Router();\n * const posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * const router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nfor (var i = 0; i < methods.length; i++) {\n  function setMethodVerb(method) {\n    Router.prototype[method] = function (name, path, middleware) {\n      var middleware;\n\n      if (typeof path === \"string\" || path instanceof RegExp) {\n        middleware = Array.prototype.slice.call(arguments, 2);\n      } else {\n        middleware = Array.prototype.slice.call(arguments, 1);\n        path = name;\n        name = null;\n      }\n\n      this.register(path, [method], middleware, {\n        name: name\n      });\n      return this;\n    };\n  }\n\n  setMethodVerb(methods[i]);\n} // Alias for `router.delete()` because delete is a reserved word\n\n\nRouter.prototype.del = Router.prototype['delete'];\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  var router = this;\n  var middleware = Array.prototype.slice.call(arguments);\n  var path; // support array of paths\n\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    var arrPaths = middleware[0];\n\n    for (var i = 0; i < arrPaths.length; i++) {\n      var p = arrPaths[i];\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    }\n\n    return this;\n  }\n\n  var hasPath = typeof middleware[0] === 'string';\n\n  if (hasPath) {\n    path = middleware.shift();\n  }\n\n  for (var i = 0; i < middleware.length; i++) {\n    var m = middleware[i];\n\n    if (m.router) {\n      var cloneRouter = Object.assign(Object.create(Router.prototype), m.router, {\n        stack: m.router.stack.slice(0)\n      });\n\n      for (var j = 0; j < cloneRouter.stack.length; j++) {\n        var nestedLayer = cloneRouter.stack[j];\n        var cloneLayer = Object.assign(Object.create(Layer.prototype), nestedLayer);\n        if (path) cloneLayer.setPrefix(path);\n        if (router.opts.prefix) cloneLayer.setPrefix(router.opts.prefix);\n        router.stack.push(cloneLayer);\n        cloneRouter.stack[j] = cloneLayer;\n      }\n\n      if (router.params) {\n        function setRouterParams(paramArr) {\n          var routerParams = paramArr;\n\n          for (var j = 0; j < routerParams.length; j++) {\n            var key = routerParams[j];\n            cloneRouter.param(key, router.params[key]);\n          }\n        }\n\n        setRouterParams(Object.keys(router.params));\n      }\n    } else {\n      router.register(path || '(.*)', [], m, {\n        end: false,\n        ignoreCaptures: !hasPath\n      });\n    }\n  }\n\n  return this;\n};\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n  this.opts.prefix = prefix;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var route = this.stack[i];\n    route.setPrefix(prefix);\n  }\n\n  return this;\n};\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  var router = this;\n\n  var dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n    var path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    var matched = router.match(path, ctx.method);\n    var layerChain, layer, i;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n    if (!matched.route) return next();\n    var matchedLayers = matched.pathAndMethod;\n    var mostSpecificLayer = matchedLayers[matchedLayers.length - 1];\n    ctx._matchedRoute = mostSpecificLayer.path;\n\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function (memo, layer) {\n      memo.push(function (ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerName = layer.name;\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n  return dispatch;\n};\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n * const Boom = require('boom');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  var implemented = this.methods;\n  return function allowedMethods(ctx, next) {\n    return next().then(function () {\n      var allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        for (var i = 0; i < ctx.matched.length; i++) {\n          var route = ctx.matched[i];\n\n          for (var j = 0; j < route.methods.length; j++) {\n            var method = route.methods[j];\n            allowed[method] = method;\n          }\n        }\n\n        var allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            var notImplementedThrowable;\n\n            if (typeof options.notImplemented === 'function') {\n              notImplementedThrowable = options.notImplemented(); // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError.NotImplemented();\n            }\n\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              var notAllowedThrowable;\n\n              if (typeof options.methodNotAllowed === 'function') {\n                notAllowedThrowable = options.methodNotAllowed(); // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError.MethodNotAllowed();\n              }\n\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\n\nRouter.prototype.all = function (name, path, middleware) {\n  var middleware;\n\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, {\n    name: name\n  });\n  return this;\n};\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') {\n    source = this.url(source);\n  } // lookup destination route by name\n\n\n  if (destination[0] !== '/') {\n    destination = this.url(destination);\n  }\n\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n  var router = this;\n  var stack = this.stack; // support array of paths\n\n  if (Array.isArray(path)) {\n    for (var i = 0; i < path.length; i++) {\n      var curPath = path[i];\n      router.register.call(router, curPath, methods, middleware, opts);\n    }\n\n    return this;\n  } // create route\n\n\n  var route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  } // add parameter middleware\n\n\n  for (var i = 0; i < Object.keys(this.params).length; i++) {\n    var param = Object.keys(this.params)[i];\n    route.param(param, this.params[param]);\n  }\n\n  stack.push(route);\n  return route;\n};\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\n\nRouter.prototype.route = function (name) {\n  var routes = this.stack;\n\n  for (var len = routes.length, i = 0; i < len; i++) {\n    if (routes[i].name && routes[i].name === name) {\n      return routes[i];\n    }\n  }\n\n  return false;\n};\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\n\nRouter.prototype.url = function (name, params) {\n  var route = this.route(name);\n\n  if (route) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(\"No route found for name: \" + name);\n};\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\n\nRouter.prototype.match = function (path, method) {\n  var layers = this.stack;\n  var layer;\n  var matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (var len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\n\nRouter.prototype.param = function (param, middleware) {\n  this.params[param] = middleware;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var route = this.stack[i];\n    route.param(param, middleware);\n  }\n\n  return this;\n};\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * const url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\n\n\nRouter.url = function (path) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return Layer.prototype.url.apply({\n    path: path\n  }, args);\n};","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/node_modules/koa-router/lib/router.js"],"names":["debug","require","compose","HttpError","methods","Layer","module","exports","Router","opts","params","stack","i","length","setMethodVerb","method","prototype","name","path","middleware","RegExp","Array","slice","call","arguments","register","del","use","router","isArray","arrPaths","p","apply","concat","hasPath","shift","m","cloneRouter","Object","assign","create","j","nestedLayer","cloneLayer","setPrefix","prefix","push","setRouterParams","paramArr","routerParams","key","param","keys","end","ignoreCaptures","replace","route","routes","dispatch","ctx","next","routerPath","matched","match","layerChain","layer","matchedLayers","pathAndMethod","mostSpecificLayer","_matchedRoute","_matchedRouteName","reduce","memo","captures","routerName","allowedMethods","options","implemented","then","allowed","status","allowedArr","indexOf","throw","notImplementedThrowable","notImplemented","NotImplemented","set","join","body","notAllowedThrowable","methodNotAllowed","MethodNotAllowed","all","redirect","source","destination","code","url","curPath","sensitive","strict","len","args","Error","layers","regexp"],"mappings":"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","sourcesContent":["/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\n\nvar debug = require('debug')('koa-router');\nvar compose = require('koa-compose');\nvar HttpError = require('http-errors');\nvar methods = require('methods');\nvar Layer = require('./layer');\n\n/**\n * @module koa-router\n */\n\nmodule.exports = Router;\n\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) {\n    return new Router(opts);\n  }\n\n  this.opts = opts || {};\n  this.methods = this.opts.methods || [\n    'HEAD',\n    'OPTIONS',\n    'GET',\n    'PUT',\n    'PATCH',\n    'POST',\n    'DELETE'\n  ];\n\n  this.params = {};\n  this.stack = [];\n};\n\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * const forums = new Router();\n * const posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * const router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nfor (var i = 0; i < methods.length; i++) {\n  function setMethodVerb(method) {\n    Router.prototype[method] = function(name, path, middleware) {\n      var middleware;\n\n      if (typeof path === \"string\" || path instanceof RegExp) {\n        middleware = Array.prototype.slice.call(arguments, 2);\n      } else {\n        middleware = Array.prototype.slice.call(arguments, 1);\n        path = name;\n        name = null;\n      }\n\n      this.register(path, [method], middleware, {\n        name: name\n      });\n\n      return this;\n    };\n  }\n  setMethodVerb(methods[i]);\n}\n\n// Alias for `router.delete()` because delete is a reserved word\nRouter.prototype.del = Router.prototype['delete'];\n\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  var router = this;\n  var middleware = Array.prototype.slice.call(arguments);\n  var path;\n\n  // support array of paths\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    var arrPaths = middleware[0];\n    for (var i = 0; i < arrPaths.length; i++) {\n      var p = arrPaths[i];\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    }\n    return this;\n  }\n\n  var hasPath = typeof middleware[0] === 'string';\n  if (hasPath) {\n    path = middleware.shift();\n  }\n\n  for (var i = 0; i < middleware.length; i++) {\n    var m = middleware[i];\n    if (m.router) {\n      var cloneRouter = Object.assign(Object.create(Router.prototype), m.router, {\n        stack: m.router.stack.slice(0)\n      });\n\n      for (var j = 0; j < cloneRouter.stack.length; j++) {\n        var nestedLayer = cloneRouter.stack[j];\n        var cloneLayer = Object.assign(\n          Object.create(Layer.prototype),\n          nestedLayer\n        );\n\n        if (path) cloneLayer.setPrefix(path);\n        if (router.opts.prefix) cloneLayer.setPrefix(router.opts.prefix);\n        router.stack.push(cloneLayer);\n        cloneRouter.stack[j] = cloneLayer;\n      }\n\n      if (router.params) {\n        function setRouterParams(paramArr) {\n          var routerParams = paramArr;\n          for (var j = 0; j < routerParams.length; j++) {\n            var key = routerParams[j];\n            cloneRouter.param(key, router.params[key]);\n          }\n        }\n        setRouterParams(Object.keys(router.params));\n      }\n    } else {\n      router.register(path || '(.*)', [], m, { end: false, ignoreCaptures: !hasPath });\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n\n  this.opts.prefix = prefix;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var route = this.stack[i];\n    route.setPrefix(prefix);\n  }\n  \n  return this;\n};\n\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  var router = this;\n\n  var dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n\n    var path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    var matched = router.match(path, ctx.method);\n    var layerChain, layer, i;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n\n    if (!matched.route) return next();\n\n    var matchedLayers = matched.pathAndMethod\n    var mostSpecificLayer = matchedLayers[matchedLayers.length - 1]\n    ctx._matchedRoute = mostSpecificLayer.path;\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function(memo, layer) {\n      memo.push(function(ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerName = layer.name;\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n\n  return dispatch;\n};\n\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n * const Boom = require('boom');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  var implemented = this.methods;\n\n  return function allowedMethods(ctx, next) {\n    return next().then(function() {\n      var allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        for (var i = 0; i < ctx.matched.length; i++) {\n          var route = ctx.matched[i];\n          for (var j = 0; j < route.methods.length; j++) {\n            var method = route.methods[j];\n              allowed[method] = method\n          }\n        }\n\n        var allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            var notImplementedThrowable;\n            if (typeof options.notImplemented === 'function') {\n              notImplementedThrowable = options.notImplemented(); // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError.NotImplemented();\n            }\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              var notAllowedThrowable;\n              if (typeof options.methodNotAllowed === 'function') {\n                notAllowedThrowable = options.methodNotAllowed(); // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError.MethodNotAllowed();\n              }\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\nRouter.prototype.all = function (name, path, middleware) {\n  var middleware;\n\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, {\n    name: name\n  });\n\n  return this;\n};\n\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') {\n    source = this.url(source);\n  }\n\n  // lookup destination route by name\n  if (destination[0] !== '/') {\n    destination = this.url(destination);\n  }\n\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n\n  var router = this;\n  var stack = this.stack;\n\n  // support array of paths\n  if (Array.isArray(path)) {\n    for (var i = 0; i < path.length; i++) {\n      var curPath = path[i];\n      router.register.call(router, curPath, methods, middleware, opts);\n    }\n\n    return this;\n  }\n\n  // create route\n  var route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  }\n\n  // add parameter middleware\n  for (var i = 0; i < Object.keys(this.params).length; i++) {\n    var param = Object.keys(this.params)[i];\n    route.param(param, this.params[param]);\n  }\n\n  stack.push(route);\n\n  return route;\n};\n\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\nRouter.prototype.route = function (name) {\n  var routes = this.stack;\n\n  for (var len = routes.length, i=0; i<len; i++) {\n    if (routes[i].name && routes[i].name === name) {\n      return routes[i];\n    }\n  }\n\n  return false;\n};\n\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\nRouter.prototype.url = function (name, params) {\n  var route = this.route(name);\n\n  if (route) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(\"No route found for name: \" + name);\n};\n\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\nRouter.prototype.match = function (path, method) {\n  var layers = this.stack;\n  var layer;\n  var matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (var len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\nRouter.prototype.param = function(param, middleware) {\n  this.params[param] = middleware;\n  for (var i = 0; i < this.stack.length; i++) {\n    var route = this.stack[i];\n    route.param(param, middleware);\n  }\n\n  return this;\n};\n\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * const url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\nRouter.url = function (path) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return Layer.prototype.url.apply({ path: path }, args);\n};\n"]},"metadata":{},"sourceType":"script"}