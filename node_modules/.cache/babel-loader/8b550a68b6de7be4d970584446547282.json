{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport { connect } from 'react-redux';\nimport { changeDistance, changePrice, changeLocation } from '../../redux/actions'; // TODO @JUbi\n// const mapStyles = {\n//   map: {\n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n//     opacity:'0.85'\n//   }\n// }\n\nexport class MapBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markers: [false, false, false],\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    return React.createElement(\"div\", {\n      className: \"mapbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      position: {\n        lat: -33.918551,\n        lng: 151.219999\n      },\n      onClick: this.onMarkerClick,\n      name: 'Prenuptial agreement',\n      time: 'Due in 1 day',\n      poster: 'Posted by Piyush S. 13 mins ago',\n      price: '$80',\n      profilephoto: 'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"View Task\")))), React.createElement(Marker, {\n      position: {\n        lat: -33.900128,\n        lng: 151.224562\n      },\n      onClick: this.onMarkerClick,\n      name: 'Wall mount 65 inch TV',\n      price: '$50',\n      time: 'Due in 6 hours',\n      poster: 'post by Purushi,21 hours ago',\n      profilephoto: 'https://pbs.twimg.com/media/Dyg-PPzXcAAY5Wv?format=jpg&name=small',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"View Task\")))), React.createElement(Marker, {\n      className: \"mapbox__maker\" //address={[{long_name:\"Kensington\",short_name:\"Kensington\"},{long_name:\"Randwick City Council\",short_name:\"Randwick\"},{long_name:\"New South Wales\",short_name:\"NSW\"},{long_name:\"Australia\",short_name:\"AU\"},{long_name:\"2033\",short_name:\"2033\"}]}\n      //position={{ lat: -33.912605, lng:  151.235999 }}\n      ,\n      onClick: this.onMarkerClick,\n      name: 'Tree looper with tree mulcher',\n      price: '$140',\n      time: 'Due 12 hours ago',\n      poster: 'post by papa H,21 hours ago',\n      profilephoto: 'https://pbs.twimg.com/media/Dyg6-4xWoAEUNut?format=jpg&name=small',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"EARN\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"View Task\"))))));\n  }\n\n} // GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n  return {\n    location: state.location.location,\n    distance: state.distance.distance,\n    price: state.price.price\n  };\n}\n\nconnect(mapStateToProps, {\n  changeDistance,\n  changePrice,\n  changeLocation\n})(MapBox);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","Geocoder","CurrentLocation","markerIcon","connect","changeDistance","changePrice","changeLocation","MapBox","state","markers","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google","lat","lng","profilephoto","price","name","time","poster","mapStateToProps","location","distance","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker,Geocoder  } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon  from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport { connect } from 'react-redux';\nimport { changeDistance,changePrice,changeLocation } from '../../redux/actions'\n// TODO @JUbi\n// const mapStyles = {\n//   map: {\n    \n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n    \n//     opacity:'0.85'\n//   }\n// }\n\nexport class MapBox extends Component {\n  \n  state = {\n      markers:[false,false,false],\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n  \n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    return (\n      <div className=\"mapbox\">\n        <CurrentLocation\n          centerAroundCurrentLocation\n          google={this.props.google}\n        >\n          \n          <Marker name={'current location'} />\n          \n          <Marker\n              \n              position={{ lat: -33.918551, lng:  151.219999 }}\n              onClick={this.onMarkerClick}\n              name={'Prenuptial agreement'} \n              time={'Due in 1 day'}\n              poster={'Posted by Piyush S. 13 mins ago'}\n              price={'$80'}\n              profilephoto={'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow>\n          <Marker\n              position={{ lat: -33.900128, lng:  151.224562 }}\n              onClick={this.onMarkerClick}\n              name={'Wall mount 65 inch TV'} \n              price={'$50'}\n              time={'Due in 6 hours'}\n              poster={'post by Purushi,21 hours ago'}\n              profilephoto={'https://pbs.twimg.com/media/Dyg-PPzXcAAY5Wv?format=jpg&name=small'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow>\n          <Marker\n              className=\"mapbox__maker\"\n              //address={[{long_name:\"Kensington\",short_name:\"Kensington\"},{long_name:\"Randwick City Council\",short_name:\"Randwick\"},{long_name:\"New South Wales\",short_name:\"NSW\"},{long_name:\"Australia\",short_name:\"AU\"},{long_name:\"2033\",short_name:\"2033\"}]}\n              //position={{ lat: -33.912605, lng:  151.235999 }}\n              onClick={this.onMarkerClick}\n              name={'Tree looper with tree mulcher'} \n              price={'$140'}\n              time={'Due 12 hours ago'}\n              poster={'post by papa H,21 hours ago'}\n              profilephoto={'https://pbs.twimg.com/media/Dyg6-4xWoAEUNut?format=jpg&name=small'}\n              icon={markerIcon}\n          />\n          {/* //-33.900128, 151.224562 */}\n          <InfoWindow\n            \n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\"><p>EARN</p><span>{this.state.selectedPlace.price}</span></div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n                </div>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        \n        \n      </div>\n    );\n  }\n}\n\n// GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n    return {\n      location: state.location.location,\n      distance: state.distance.distance,\n      price: state.price.price,\n    }\n}\n  \n  \nconnect(mapStateToProps, {\n    changeDistance,changePrice,changeLocation\n})(MapBox);\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);"]},"metadata":{},"sourceType":"module"}