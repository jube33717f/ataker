{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/hoc/inputComponent.js\";\nimport React, { Component } from 'react';\nexport default function InputComponent(props) {\n  const {\n    onChange,\n    values,\n    errors,\n    // props from validationHoc\n    name,\n    title,\n    value,\n    label,\n    placeholder,\n    type,\n    // props from html tag <input>\n    inputClassName,\n    errorClassName,\n    // props from classname customed by this function caller\n    textareaOption // options for textarea instead of input\n\n  } = props;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, title && React.createElement(\"label\", {\n    htmlFor: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, title), !textareaOption ? React.createElement(\"input\", {\n    onChange: type !== \"radio\" && onChange,\n    onClick: type === \"radio\" && onChange,\n    value: type === \"radio\" ? value : values[name] || '',\n    className: `${inputClassName} ${errors[name] && \"input-area--invalid\"}`,\n    placeholder: placeholder,\n    name: name,\n    id: label || title,\n    type: type,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(\"textarea\", {\n    onChange: onChange,\n    value: values[name] || '',\n    className: `${inputClassName} ${errors[name] && \"input-area--invalid\"}`,\n    placeholder: placeholder,\n    name: name,\n    id: label || title,\n    type: type,\n    rows: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: errorClassName || \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, errors[name]));\n}","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/hoc/inputComponent.js"],"names":["React","Component","InputComponent","props","onChange","values","errors","name","title","value","label","placeholder","type","inputClassName","errorClassName","textareaOption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM;AACFC,IAAAA,QADE;AACQC,IAAAA,MADR;AACgBC,IAAAA,MADhB;AACyB;AAC3BC,IAAAA,IAFE;AAEIC,IAAAA,KAFJ;AAEWC,IAAAA,KAFX;AAEkBC,IAAAA,KAFlB;AAEyBC,IAAAA,WAFzB;AAEsCC,IAAAA,IAFtC;AAE4C;AAC9CC,IAAAA,cAHE;AAGcC,IAAAA,cAHd;AAG8B;AAChCC,IAAAA,cAJE,CAIa;;AAJb,MAKFZ,KALJ;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,KAAK,IAAI;AAAO,IAAA,OAAO,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADd,EAGK,CAACO,cAAD,GAEG;AACI,IAAA,QAAQ,EAAEH,IAAI,KAAK,OAAT,IAAoBR,QADlC;AAEI,IAAA,OAAO,EAAEQ,IAAI,KAAK,OAAT,IAAoBR,QAFjC;AAGI,IAAA,KAAK,EAAEQ,IAAI,KAAK,OAAT,GAAmBH,KAAnB,GAA4BJ,MAAM,CAACE,IAAD,CAAN,IAAgB,EAHvD;AAII,IAAA,SAAS,EAAG,GAAEM,cAAe,IAAGP,MAAM,CAACC,IAAD,CAAN,IAAgB,qBAAsB,EAJ1E;AAKI,IAAA,WAAW,EAAEI,WALjB;AAMI,IAAA,IAAI,EAAEJ,IANV;AAOI,IAAA,EAAE,EAAEG,KAAK,IAAIF,KAPjB;AAQI,IAAA,IAAI,EAAEI,IARV;AASI,IAAA,YAAY,EAAC,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,GAcG;AACI,IAAA,QAAQ,EAAER,QADd;AAEI,IAAA,KAAK,EAAEC,MAAM,CAACE,IAAD,CAAN,IAAgB,EAF3B;AAGI,IAAA,SAAS,EAAG,GAAEM,cAAe,IAAGP,MAAM,CAACC,IAAD,CAAN,IAAgB,qBAAsB,EAH1E;AAII,IAAA,WAAW,EAAEI,WAJjB;AAKI,IAAA,IAAI,EAAEJ,IALV;AAMI,IAAA,EAAE,EAAEG,KAAK,IAAIF,KANjB;AAOI,IAAA,IAAI,EAAEI,IAPV;AAQI,IAAA,IAAI,EAAC,GART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBR,EA6BI;AAAK,IAAA,SAAS,EAAEE,cAAc,IAAI,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDR,MAAM,CAACC,IAAD,CAA1D,CA7BJ,CADJ;AAiCH","sourcesContent":["import React, { Component } from 'react';\nexport default function InputComponent(props) {\n    const {\n        onChange, values, errors,  // props from validationHoc\n        name, title, value, label, placeholder, type, // props from html tag <input>\n        inputClassName, errorClassName, // props from classname customed by this function caller\n        textareaOption // options for textarea instead of input\n    } = props;\n\n    return (\n        <div>\n            {title && <label htmlFor={title}>{title}</label>}\n\n            {!textareaOption\n                ?\n                <input\n                    onChange={type !== \"radio\" && onChange}\n                    onClick={type === \"radio\" && onChange}\n                    value={type === \"radio\" ? value : (values[name] || '')}\n                    className={`${inputClassName} ${errors[name] && \"input-area--invalid\"}`}\n                    placeholder={placeholder}\n                    name={name}\n                    id={label || title}\n                    type={type}\n                    autoComplete=\"off\"\n                />\n                :\n                <textarea\n                    onChange={onChange}\n                    value={values[name] || ''}\n                    className={`${inputClassName} ${errors[name] && \"input-area--invalid\"}`}\n                    placeholder={placeholder}\n                    name={name}\n                    id={label || title}\n                    type={type}\n                    rows=\"5\"\n                />\n            }\n\n            <div className={errorClassName || \"error-message\"}>{errors[name]}</div>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}