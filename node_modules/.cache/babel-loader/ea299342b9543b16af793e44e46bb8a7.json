{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/billing-address.js\";\nimport React, { Component } from \"react\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\";\nimport { reqUpdateUser } from \"../../../../../api/api\";\nimport { connect } from \"react-redux\"; // TODO @SONIA\n\nclass BillingAddress extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    this.props.setInitialData(this.props.userData);\n  }\n\n  render() {\n    const {\n      addressLine1,\n      addressLine2,\n      country,\n      postCode,\n      state,\n      suburb\n    } = this.props.values;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Your billing address will be verified before you can receive payments.\"), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"addressLine1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Address Line 1\"), React.createElement(\"input\", {\n      className: this.props.errors.addressLine1 ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"addressLine1\",\n      id: \"addressLine1\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: addressLine1 //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.errors.addressLine1)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"addressLine2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Address Line 2 (Optional)\"), React.createElement(\"input\", {\n      className: this.props.errors.addressLine2 ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"addressLine2\",\n      id: \"addressLine2\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: addressLine2 //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.errors.addressLine2)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"suburb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Suburb\"), React.createElement(\"input\", {\n      className: this.props.errors.suburb ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"suburb\",\n      id: \"suburb\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: suburb //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.errors.suburb)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"input\", {\n      className: this.props.errors.state ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"state\",\n      id: \"state\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: state //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.errors.state)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"postCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(\"input\", {\n      className: this.props.errors.postCode ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"postCode\",\n      id: \"postCode\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: postCode //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.errors.postCode)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"input\", {\n      className: this.props.errors.country ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"country\",\n      id: \"country\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: country //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.props.errors.country)), React.createElement(\"button\", {\n      className: \"green-button\",\n      onClick: async () => {\n        await this.props.checkValidationErrors();\n\n        if (await this.props.okToSubmit()) {\n          const result = await reqUpdateUser(this.props.user.email, {\n            billingAddress: this.props.values\n          });\n\n          if (result.status === 0) {\n            alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Add billing address\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Your address will never been shown publicly, it is only used for account verification purposes.\"));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(ValidationHoc(BillingAddress, [\"addressLine1\", \"suburb\", \"state\", \"postCode\", \"country\"]));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/billing-address.js"],"names":["React","Component","ValidationHoc","reqUpdateUser","connect","BillingAddress","constructor","componentDidMount","props","setInitialData","userData","render","addressLine1","addressLine2","country","postCode","state","suburb","values","errors","e","onChange","Object","keys","length","checkValidationErrors","okToSubmit","result","user","email","billingAddress","status","alert","JSON","stringify","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\"\nimport { reqUpdateUser } from \"../../../../../api/api\"\nimport { connect } from \"react-redux\";\n// TODO @SONIA\n\nclass BillingAddress extends React.Component {\n    constructor() {\n        super();\n\n    }\n    componentDidMount() {\n        this.props.setInitialData(this.props.userData)\n    }\n    render() {\n        const { addressLine1, addressLine2, country, postCode, state, suburb } = this.props.values;\n        return (\n            <div>\n                <p>Your billing address will be verified before you can receive payments.</p>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"addressLine1\">Address Line 1</label>\n                    <input className={this.props.errors.addressLine1 ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"addressLine1\"\n                        id=\"addressLine1\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={addressLine1} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.addressLine1}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"addressLine2\">Address Line 2 (Optional)</label>\n                    <input className={this.props.errors.addressLine2 ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"addressLine2\"\n                        id=\"addressLine2\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={addressLine2} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.addressLine2}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"suburb\">Suburb</label>\n                    <input className={this.props.errors.suburb ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"suburb\"\n                        id=\"suburb\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={suburb} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.suburb}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"state\">State</label>\n                    <input className={this.props.errors.state ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"state\"\n                        id=\"state\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={state} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.state}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"postCode\">Postcode</label>\n                    <input className={this.props.errors.postCode ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"postCode\"\n                        id=\"postCode\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={postCode} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.postCode}</div>\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"country\">Country</label>\n                    <input className={this.props.errors.country ? \"input-area input-area--invalid\" : \"input-area\"}\n                        name=\"country\"\n                        id=\"country\"\n                        onChange={async (e) => {\n                            await this.props.onChange(e);\n                            if (Object.keys(this.props.errors).length > 0) {\n                                this.props.checkValidationErrors(e);\n                            }\n                        }}\n                        value={country} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                    />\n                    <div className=\"error-message\">{this.props.errors.country}</div>\n                </div>\n                <button className=\"green-button\"\n                    onClick={async () => {\n                        await this.props.checkValidationErrors();\n                        if (await this.props.okToSubmit()) {\n                            const result = await reqUpdateUser(this.props.user.email, { billingAddress: this.props.values });\n                            if (result.status === 0) {\n                                alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n                            }\n                        }\n                    }}\n                >\n                    Add billing address\n                </button>\n                <p>Your address will never been shown publicly, it is only used for account verification purposes.</p>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({ user: state.user }), {})(\n    ValidationHoc(BillingAddress, [\"addressLine1\", \"suburb\", \"state\", \"postCode\", \"country\"]));"]},"metadata":{},"sourceType":"module"}