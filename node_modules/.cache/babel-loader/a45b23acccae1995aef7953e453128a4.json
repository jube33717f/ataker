{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\"; // TODO @DAVIN\n\nconst mapStyles = {\n  map: {\n    width: '80%',\n    height: '100%'\n  }\n}; // const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n//     border:'none',\n//     background:'#33717f',\n//   }\n// }\n\nexport class MapBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markers: [false, false, false],\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    return React.createElement(\"div\", {\n      className: \"mapbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      position: {\n        lat: -33.918551,\n        lng: 151.219999\n      },\n      onClick: this.onMarkerClick,\n      name: this.state.markers[0],\n      name2: 'as',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/doodle/48/000000/girl.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.selectedPlace.name2))), React.createElement(Marker, {\n      className: \"mapbox__maker\",\n      position: {\n        lat: -33.912605,\n        lng: 151.235999\n      },\n      onClick: this.onMarkerClick,\n      name: 'tasker2',\n      time: 'Due 12 hours ago',\n      poster: 'post by papa H,21 hours ago',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/doodle/48/000000/girl.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.selectedPlace.poster), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"View Task\")))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","GoogleMap","Map","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","markerIcon","mapStyles","map","width","height","MapBox","state","markers","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google","lat","lng","name2","name","time","poster","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleMap, Map, GoogleApiWrapper, InfoWindow, Marker  } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon  from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\n// TODO @DAVIN\nconst mapStyles = {\n  map: {\n    \n    width: '80%',\n    height: '100%'\n  }\n};\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n//     border:'none',\n//     background:'#33717f',\n//   }\n// }\n\nexport class MapBox extends Component {\n  \n  state = {\n      markers:[false,false,false],\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n  \n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    return (\n      <div className=\"mapbox\">\n        <CurrentLocation\n          centerAroundCurrentLocation\n          google={this.props.google}\n        >\n          \n          <Marker onClick={this.onMarkerClick} name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n          </InfoWindow>\n          <Marker\n              position={{ lat: -33.918551, lng:  151.219999 }}\n              onClick={this.onMarkerClick}\n              name={this.state.markers[0]} \n              name2={'as'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow__img\">\n                <img src=\"https://img.icons8.com/doodle/48/000000/girl.png\"/>\n              </div>\n              <div className=\"mapbox--infoWindow__earn\"></div>\n              <h4>{this.state.selectedPlace.name2}</h4>\n            </div>\n          </InfoWindow>\n          <Marker\n              className=\"mapbox__maker\"\n              position={{ lat: -33.912605, lng:  151.235999 }}\n              onClick={this.onMarkerClick}\n              name={'tasker2'} \n              time={'Due 12 hours ago'}\n              poster={'post by papa H,21 hours ago'}\n              icon={markerIcon}\n          />\n          <InfoWindow\n            \n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow__img\">\n                <img src=\"https://img.icons8.com/doodle/48/000000/girl.png\"/>\n              </div>\n              <div className=\"mapbox--infoWindow__earn\"></div>\n              <h4>{this.state.selectedPlace.name}</h4>\n              <p>{this.state.selectedPlace.time}</p>\n              <span>{this.state.selectedPlace.poster}</span>\n              <button>View Task</button>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\n\n"]},"metadata":{},"sourceType":"module"}