{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/post-task.js\";\nimport React, { Component } from \"react\";\nimport BlurBackgroundHoc from \"../../hoc/blurBackgroundHoc\";\nimport ValidationHoc from \"../../hoc/validationHoc\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDesktop } from \"@fortawesome/free-solid-svg-icons\";\nimport { reqTaskDetail } from \"../../api/api\";\nimport \"./post-task.scss\"; // TODO @SONIA\n\nclass PostTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNum: 0,\n      pageMovementDirection: '',\n      budgetHours: '',\n      budgetHourlyRate: '',\n      budgetTotal: '',\n      budgetCalMethod: 'byTotal'\n    };\n  }\n\n  async componentDidMount() {\n    this.props.blurBackground();\n    this.setState({\n      pageNum: 1\n    }); // for 'post a similar task' feature.\n\n    const taskId = this.props.match.params.id;\n\n    if (taskId) {\n      try {\n        const result = await reqTaskDetail(taskId);\n\n        if (result.status === 0) {\n          const {\n            title,\n            detail,\n            price,\n            dueDate,\n            place\n          } = result.data;\n          const taskData = {\n            taskTitle: title,\n            taskDetail: detail,\n            taskLocation: place,\n            taskDuedate: dueDate,\n            taskBudget: price\n          };\n          this.props.setInitialData(taskData);\n          this.setState({\n            budgetTotal: price\n          });\n        }\n      } catch (error) {\n        //SONIA：要考虑下怎么handle这的error，不然react会报错\n        alert(\"failed to request task detail\");\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.resetBackground();\n  }\n\n  render() {\n    let path = this.props.history.location.pathname;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container--not-blured\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttask-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.pageNum === 1 && 'Tell us what you need done?', this.state.pageNum === 2 && 'Say where & when', this.state.pageNum === 3 && 'Suggest how much', React.createElement(FontAwesomeIcon, {\n      icon: faWindowClose,\n      className: \"button-close\",\n      onClick: () => {\n        this.props.history.goBack(); //this.props.history.push(`${path.substring(0, path.length - 5)}`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: `progress-bar ${this.state.pageNum === 1 && \"first-page\" || this.state.pageNum === 2 && \"second-page\" || this.state.pageNum === 3 && \"third-page\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), this.state.pageNum === 1 && React.createElement(\"div\", {\n      className: `form__content ${this.state.pageMovementDirection}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"What do you need done?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"This'll be the title of your task - e.g. Help move my sofa\"), React.createElement(\"input\", {\n      maxLength: \"50\",\n      className: this.props.errors.taskTitle ? \"input-area input-area--invalid\" : \"input-area\",\n      name: \"taskTitle\",\n      id: \"taskTitle\",\n      onChange: async e => {\n        await this.props.onChange(e);\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: this.props.values.taskTitle || '' //这里如果不设置value，点击下一页后返回上一页会丢失内容\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.errors.taskTitle)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"What are the details?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Be as specific as you can about what needs doing\"), React.createElement(\"textarea\", {\n      name: \"taskDetail\",\n      className: this.props.errors.taskDetail ? \"input-area input-area--invalid\" : \"input-area\",\n      id: \"taskDetail\",\n      rows: \"5\",\n      onChange: async e => {\n        await this.props.onChange(e); // 第一次输入的时候不会有同步错误提示，只有点了一次提交以后才会跟随用户输入显示同步的错误提示\n\n        if (Object.keys(this.props.errors).length > 0) {\n          this.props.checkValidationErrors(e);\n        }\n      },\n      value: this.props.values.taskDetail || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.errors.taskDetail))), this.state.pageNum === 2 && React.createElement(\"div\", {\n      className: `form__content ${this.state.pageMovementDirection}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Where do you need it done?\"), React.createElement(\"div\", {\n      className: \"tab-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      type: \"radio\",\n      className: \"input-option\",\n      name: \"taskLocation\",\n      value: \"\",\n      onClick: async e => {\n        // this.props.onChange(e);\n        await this.props.onChange(e);\n        this.props.checkValidationErrors(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.values.taskLocation !== \"online\" ? \"input-option--dot\" : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), \"In person\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Select this if you need the Tasker physically there.\"), React.createElement(FontAwesomeIcon, {\n      icon: faMapMarkerAlt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tab-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      type: \"radio\",\n      className: \"input-option\",\n      name: \"taskLocation\",\n      value: \"online\",\n      onClick: async e => {\n        await this.props.onChange(e);\n        this.props.checkValidationErrors(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.values.taskLocation === \"online\" ? \"input-option--dot\" : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), \"Online\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Select this if the Tasker can do it from home.\"), React.createElement(FontAwesomeIcon, {\n      icon: faDesktop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), this.props.values.taskLocation !== \"online\" && React.createElement(\"input\", {\n      name: \"taskLocation\",\n      className: this.props.errors.taskLocation ? \"input-area input-area--invalid\" : \"input-area\",\n      onChange: async e => {\n        await this.props.onChange(e);\n        this.props.checkValidationErrors(e);\n      },\n      value: this.props.values.taskLocation || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.errors.taskLocation)), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskDuedate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"When do you need it done?\"), React.createElement(\"input\", {\n      name: \"taskDuedate\",\n      className: this.props.errors.taskDuedate ? \"input-area input-area--invalid\" : \"input-area\",\n      type: \"date\",\n      id: \"taskDuedate\",\n      onChange: async e => {\n        await this.props.onChange(e);\n        this.props.checkValidationErrors(e);\n      },\n      value: this.props.values.taskDuedate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.props.errors.taskDuedate))), this.state.pageNum === 3 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: `form__content ${this.state.pageMovementDirection}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskBudgetTotal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \" What is your budget?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Please enter the price you're comfortable to pay to get your task done. Taskers will use this as a guide for how much to offer.\"), React.createElement(\"div\", {\n      className: \"tab-container--inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      type: \"radio\",\n      className: \"input-option\",\n      onClick: e => {\n        this.setState({\n          budgetCalMethod: 'byTotal'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.budgetCalMethod === \"byTotal\" && \"input-option--dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"div\", {\n      type: \"radio\",\n      className: \"input-option\",\n      onClick: e => {\n        this.setState({\n          budgetCalMethod: 'byHours'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.budgetCalMethod === \"byHours\" && \"input-option--dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Hourly rate\")), React.createElement(\"div\", {\n      className: \"input-section--inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-section--inline-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: this.props.errors.taskBudget ? \"input-area input-area--invalid\" : \"input-area\",\n      onChange: e => {\n        if (this.state.budgetCalMethod !== \"byHours\") {\n          // await this.props.onChange(e);\n          // if (Object.keys(this.props.errors).includes('taskBudget')) { //\n          //     this.props.checkValidationErrors(e);\n          // }\n          this.setState({\n            budgetTotal: e.target.value\n          });\n        } else {\n          this.setState({\n            budgetHourlyRate: e.target.value,\n            budgetTotal: e.target.value * this.state.budgetHours\n          });\n        }\n      },\n      value: this.state.budgetCalMethod !== \"byHours\" ? this.state.budgetTotal : this.state.budgetHourlyRate,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), this.state.budgetCalMethod === \"byHours\" && React.createElement(\"div\", {\n      className: \"unit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"/hr\")), React.createElement(\"div\", {\n      className: \"input-section--inline-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.state.budgetCalMethod === \"byHours\" && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"X\"), \" \", React.createElement(\"input\", {\n      className: \"input-area\",\n      onChange: e => {\n        this.setState({\n          budgetHours: e.target.value,\n          budgetTotal: this.state.budgetHourlyRate * e.target.value\n        });\n      },\n      value: this.state.budgetHours,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), this.state.budgetCalMethod === \"byHours\" && React.createElement(\"div\", {\n      className: \"unit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"hrs\"))), React.createElement(\"div\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, this.props.errors.taskBudget))), React.createElement(\"div\", {\n      className: \"price-banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"price-banner__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"ESTIMATED BUDGET\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Final payment will be agreed later\")), React.createElement(\"div\", {\n      className: \"price-banner__price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, this.state.budgetTotal, \"$\")))), React.createElement(\"div\", {\n      className: \"bottom-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.state.pageNum > 1 && React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          pageNum: this.state.pageNum - 1,\n          pageMovementDirection: 'backward-movement'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" Before \"), this.state.pageNum < 3 ? React.createElement(\"button\", {\n      onClick: async () => {\n        let fieldsToCheckByPageNum = [[\"taskTitle\", \"taskDetail\"], [\"taskLocation\", \"taskDuedate\"], [\"taskBudget\"]];\n        await this.props.checkValidationErrors();\n\n        if (await this.props.okToSubmit(fieldsToCheckByPageNum[this.state.pageNum - 1])) {\n          this.setState({\n            pageNum: this.state.pageNum + 1,\n            pageMovementDirection: 'forward-movement'\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \" Next \") : React.createElement(\"button\", {\n      name: \"taskBudget\",\n      value: this.state.budgetTotal //not from hoc!\n      ,\n      onClick: async e => {\n        await this.props.onChange(e);\n        await this.props.checkValidationErrors();\n\n        if (await this.props.okToSubmit()) {\n          alert('succeeded to submit form!');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \" Get quotes \")))));\n  }\n\n}\n\nexport default ValidationHoc(BlurBackgroundHoc(PostTask), [\"taskTitle\", \"taskDetail\", \"taskLocation\", \"taskDuedate\", \"taskBudget\"]);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/post-task.js"],"names":["React","Component","BlurBackgroundHoc","ValidationHoc","FontAwesomeIcon","faWindowClose","faMapMarkerAlt","faDesktop","reqTaskDetail","PostTask","constructor","props","state","pageNum","pageMovementDirection","budgetHours","budgetHourlyRate","budgetTotal","budgetCalMethod","componentDidMount","blurBackground","setState","taskId","match","params","id","result","status","title","detail","price","dueDate","place","data","taskData","taskTitle","taskDetail","taskLocation","taskDuedate","taskBudget","setInitialData","error","alert","componentWillUnmount","resetBackground","render","path","history","location","pathname","goBack","errors","e","onChange","Object","keys","length","checkValidationErrors","values","target","value","fieldsToCheckByPageNum","okToSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BlurBackgroundHoc from \"../../hoc/blurBackgroundHoc\";\nimport ValidationHoc from \"../../hoc/validationHoc\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDesktop } from \"@fortawesome/free-solid-svg-icons\";\nimport { reqTaskDetail } from \"../../api/api\"\nimport \"./post-task.scss\"\n// TODO @SONIA\nclass PostTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNum: 0,\n            pageMovementDirection: '',\n            budgetHours: '',\n            budgetHourlyRate: '',\n            budgetTotal: '',\n            budgetCalMethod: 'byTotal'\n        }\n    }\n    async componentDidMount() {\n        this.props.blurBackground();\n        this.setState({ pageNum: 1 })\n        // for 'post a similar task' feature.\n        const taskId = this.props.match.params.id\n        if (taskId) {\n            try {\n                const result = await reqTaskDetail(taskId);\n                if (result.status === 0) {\n                    const { title, detail, price, dueDate, place } = result.data;\n                    const taskData = { taskTitle: title, taskDetail: detail, taskLocation: place, taskDuedate: dueDate, taskBudget: price };\n                    this.props.setInitialData(taskData);\n                    this.setState({ budgetTotal: price })\n                }\n            } catch (error) {\n                //SONIA：要考虑下怎么handle这的error，不然react会报错\n                alert(\"failed to request task detail\");\n            }\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.props.resetBackground();\n    }\n    render() {\n        let path = this.props.history.location.pathname;\n\n        return (\n            <div className=\"container\">\n                <div className=\"container--not-blured\">\n                    <div className=\"posttask-form\">\n                        <div className=\"form__header\">\n                            <div>\n                                {this.state.pageNum === 1 && 'Tell us what you need done?'}\n                                {this.state.pageNum === 2 && 'Say where & when'}\n                                {this.state.pageNum === 3 && 'Suggest how much'}\n                                <FontAwesomeIcon icon={faWindowClose} className=\"button-close\" onClick={() => {\n                                    this.props.history.goBack(); //this.props.history.push(`${path.substring(0, path.length - 5)}`);\n                                }} />\n                            </div>\n                            <div className={`progress-bar ${\n                                (this.state.pageNum === 1 && \"first-page\") ||\n                                (this.state.pageNum === 2 && \"second-page\") ||\n                                (this.state.pageNum === 3 && \"third-page\")\n                                }`}></div>\n                        </div>\n\n                        {this.state.pageNum === 1 &&\n                            <div className={`form__content ${this.state.pageMovementDirection}`}>\n                                <div className=\"form__content--item\">\n                                    <label htmlFor=\"taskTitle\">What do you need done?</label>\n                                    <p>This'll be the title of your task - e.g. Help move my sofa</p>\n                                    <input maxLength=\"50\"\n                                        className={this.props.errors.taskTitle ? \"input-area input-area--invalid\" : \"input-area\"}\n                                        name=\"taskTitle\"\n                                        id=\"taskTitle\"\n                                        onChange={async (e) => {\n                                            await this.props.onChange(e);\n                                            if (Object.keys(this.props.errors).length > 0) {\n                                                this.props.checkValidationErrors(e);\n                                            }\n                                        }}\n                                        value={this.props.values.taskTitle || ''} //这里如果不设置value，点击下一页后返回上一页会丢失内容\n                                    />\n                                    <div className=\"error-message\">{this.props.errors.taskTitle}</div>\n                                </div>\n                                <div className=\"form__content--item\">\n                                    <label htmlFor=\"taskDetail\">What are the details?</label>\n                                    <p>Be as specific as you can about what needs doing</p>\n                                    <textarea name=\"taskDetail\"\n                                        className={this.props.errors.taskDetail ? \"input-area input-area--invalid\" : \"input-area\"}\n                                        id=\"taskDetail\"\n                                        rows=\"5\"\n                                        onChange={async (e) => {\n                                            await this.props.onChange(e);\n                                            // 第一次输入的时候不会有同步错误提示，只有点了一次提交以后才会跟随用户输入显示同步的错误提示\n                                            if (Object.keys(this.props.errors).length > 0) {\n                                                this.props.checkValidationErrors(e);\n                                            }\n                                        }}\n                                        value={this.props.values.taskDetail || ''}\n                                    />\n                                    <div className=\"error-message\">{this.props.errors.taskDetail}</div>\n                                </div>\n                            </div>\n                        }\n\n                        {this.state.pageNum === 2 &&\n                            <div className={`form__content ${this.state.pageMovementDirection}`}>\n                                <div className=\"form__content--item\">\n                                    <label htmlFor=\"taskLocation\">Where do you need it done?</label>\n                                    {/* 这里用了label下面就要用select和option */}\n                                    <div className=\"tab-container\">\n                                        <div className=\"tab-option\" >\n                                            <div>\n                                                <div type=\"radio\" className=\"input-option\" name=\"taskLocation\" value=\"\" onClick={async (e) => {\n                                                    // this.props.onChange(e);\n                                                    await this.props.onChange(e);\n                                                    this.props.checkValidationErrors(e);\n                                                }}>\n                                                    <div className={this.props.values.taskLocation !== \"online\" ? \"input-option--dot\" : ''}></div>\n                                                </div>\n                                                In person\n                                                </div>\n                                            <p>Select this if you need the Tasker physically there.</p>\n                                            <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                        </div>\n                                        <div className=\"tab-option\" >\n                                            <div>\n                                                <div type=\"radio\" className=\"input-option\" name=\"taskLocation\" value=\"online\" onClick={async (e) => {\n                                                    await this.props.onChange(e);\n                                                    this.props.checkValidationErrors(e);\n                                                }}>\n                                                    <div className={this.props.values.taskLocation === \"online\" ? \"input-option--dot\" : ''}></div>\n                                                </div>\n                                            Online\n                                            </div>\n                                            <p>Select this if the Tasker can do it from home.</p>\n                                            <FontAwesomeIcon icon={faDesktop} />\n                                        </div>\n                                    </div>\n                                    {this.props.values.taskLocation !== \"online\" &&\n                                        <input name=\"taskLocation\"\n                                            className={this.props.errors.taskLocation ? \"input-area input-area--invalid\" : \"input-area\"}\n                                            onChange={async (e) => {\n                                                await this.props.onChange(e);\n                                                this.props.checkValidationErrors(e);\n                                            }}\n                                            value={this.props.values.taskLocation || ''} />}\n                                    <div className=\"error-message\">{this.props.errors.taskLocation}</div>\n                                </div>\n                                <div className=\"form__content--item\">\n\n                                    <label htmlFor=\"taskDuedate\">When do you need it done?</label>\n                                    <input name=\"taskDuedate\"\n                                        className={this.props.errors.taskDuedate ? \"input-area input-area--invalid\" : \"input-area\"}\n                                        type=\"date\"\n                                        id=\"taskDuedate\"\n                                        onChange={async (e) => {\n                                            await this.props.onChange(e);\n                                            this.props.checkValidationErrors(e);\n                                        }}\n                                        value={this.props.values.taskDuedate}\n                                    />\n\n                                    <div className=\"error-message\">{this.props.errors.taskDuedate}</div>\n                                </div>\n                            </div>\n                        }\n\n                        {this.state.pageNum === 3 && <>\n                            <div className={`form__content ${this.state.pageMovementDirection}`}>\n                                {/* 这里label htmlFor要用什么值？ */}\n                                <div className=\"form__content--item\">\n\n                                    <label htmlFor=\"taskBudgetTotal\"> What is your budget?</label>\n                                    <p>Please enter the price you're comfortable to pay to get your task done. Taskers will use this as a guide for how much to offer.</p>\n                                    <div className=\"tab-container--inline\">\n                                        <div type=\"radio\" className=\"input-option\" onClick={(e) => {\n                                            this.setState({ budgetCalMethod: 'byTotal' })\n                                        }}>\n                                            <div className={this.state.budgetCalMethod === \"byTotal\" && \"input-option--dot\"}></div>\n                                        </div>\n                                        <span>Total</span>\n\n                                        <div type=\"radio\" className=\"input-option\" onClick={(e) => {\n                                            this.setState({ budgetCalMethod: 'byHours' })\n                                        }}>\n                                            <div className={this.state.budgetCalMethod === \"byHours\" && \"input-option--dot\"}></div>\n                                        </div>\n                                        <span>Hourly rate</span>\n                                    </div>\n                                    <div className=\"input-section--inline\">\n                                        <div className=\"input-section--inline-item\" >\n                                            <input\n                                                className={this.props.errors.taskBudget ? \"input-area input-area--invalid\" : \"input-area\"}\n                                                onChange={(e) => {\n                                                    if (this.state.budgetCalMethod !== \"byHours\") {\n                                                        // await this.props.onChange(e);\n                                                        // if (Object.keys(this.props.errors).includes('taskBudget')) { //\n                                                        //     this.props.checkValidationErrors(e);\n                                                        // }\n                                                        this.setState({ budgetTotal: e.target.value })\n                                                    } else {\n                                                        this.setState({ budgetHourlyRate: e.target.value, budgetTotal: e.target.value * this.state.budgetHours })\n                                                    }\n                                                }}\n                                                value={this.state.budgetCalMethod !== \"byHours\" ?\n                                                    this.state.budgetTotal : this.state.budgetHourlyRate\n                                                }\n                                                type=\"number\"\n                                            />\n                                            {this.state.budgetCalMethod === \"byHours\" && <div className=\"unit\">/hr</div>}\n                                        </div>\n                                        <div className=\"input-section--inline-item\" >\n\n                                            {this.state.budgetCalMethod === \"byHours\" && <>\n                                                <span>X</span> <input\n                                                    className=\"input-area\"\n                                                    onChange={(e) => {\n                                                        this.setState({ budgetHours: e.target.value, budgetTotal: this.state.budgetHourlyRate * e.target.value })\n                                                    }}\n                                                    value={this.state.budgetHours}\n                                                    type=\"number\"\n                                                /></>}\n                                            {this.state.budgetCalMethod === \"byHours\" && <div className=\"unit\">hrs</div>}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"error-message\">{this.props.errors.taskBudget}</div>\n\n                                </div>\n                            </div>\n                            <div className=\"price-banner\">\n                                <div className=\"price-banner__title\">\n\n                                    <h3>ESTIMATED BUDGET</h3>\n                                    <h4>Final payment will be agreed later</h4>\n                                </div>\n                                <div className=\"price-banner__price\">\n                                    <h2>{this.state.budgetTotal}$</h2>\n                                </div>\n                            </div>\n                        </>\n                        }\n\n                        <div className=\"bottom-buttons\">\n                            {this.state.pageNum > 1 && <button onClick={() => { this.setState({ pageNum: this.state.pageNum - 1, pageMovementDirection: 'backward-movement' }) }}> Before </button>}\n                            {this.state.pageNum < 3\n                                ?\n                                <button onClick={async () => {\n                                    let fieldsToCheckByPageNum = [\n                                        [\"taskTitle\", \"taskDetail\"],\n                                        [\"taskLocation\", \"taskDuedate\"],\n                                        [\"taskBudget\"]\n                                    ]\n                                    await this.props.checkValidationErrors();\n                                    if (await this.props.okToSubmit(fieldsToCheckByPageNum[this.state.pageNum - 1])) {\n                                        this.setState({ pageNum: this.state.pageNum + 1, pageMovementDirection: 'forward-movement' });\n                                    }\n                                }}> Next </button>\n                                :\n                                <button name=\"taskBudget\"\n                                    value={this.state.budgetTotal} //not from hoc!\n                                    onClick={async (e) => {\n                                        await this.props.onChange(e);\n                                        await this.props.checkValidationErrors();\n                                        if (await this.props.okToSubmit()) {\n                                            alert('succeeded to submit form!')\n                                        }\n                                    }}> Get quotes </button>\n                            }\n                        </div>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default ValidationHoc(BlurBackgroundHoc(PostTask), [\"taskTitle\", \"taskDetail\", \"taskLocation\", \"taskDuedate\", \"taskBudget\"]); "]},"metadata":{},"sourceType":"module"}