{"ast":null,"code":"import { LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER, ADD_TASK, CLEAR_POST_TASK, SET_VALIDATION_HOC_CHECK, ADD_TASK_DETAIL, ADD_USER_ROLE, CLEAR_TASK_DETAIL, RELOAD_TASK_DETAIL, RELOAD_TASK_LIST, ADD_OFFER_DETAIL, CLEAR_OFFER_DETAIL, ADD_TASK_LIST } from \"./action-types\";\nimport { reqLogin } from \"../api/api\";\nexport const loginUser = email => ({\n  type: LOGIN_USER,\n  email\n});\nexport const logoutUser = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: LOGOUT_USER\n  };\n};\nexport const displayLoginErr = msg => ({\n  type: ERROR_MSG,\n  msg\n});\nexport const login = ({\n  email,\n  password\n}) => {\n  return async dispatch => {\n    try {\n      // send request\n      const result = await reqLogin(email, password);\n\n      if (result.status === 200) {\n        dispatch(loginUser(email));\n        localStorage.setItem(\"user\", email);\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        dispatch(displayLoginErr(error.response.data));\n      }\n    }\n  };\n};\nexport const checkUser = () => ({\n  type: CHECK_USER,\n  readyToBid: true\n});\nexport const addTask = taskData => ({\n  type: ADD_TASK,\n  taskData\n});\nexport const setValidationHocCheck = validationHocCheck => ({\n  type: SET_VALIDATION_HOC_CHECK,\n  validationHocCheck\n});\nexport const clearPostTask = () => ({\n  type: CLEAR_POST_TASK\n});\nexport const addTaskDetail = taskData => ({\n  type: ADD_TASK_DETAIL,\n  taskData\n});\nexport const addUserRole = userRole => ({\n  type: ADD_USER_ROLE,\n  userRole\n});\nexport const clearTaskDetail = () => ({\n  type: CLEAR_TASK_DETAIL\n});\nexport const reloadTaskDetail = readyToReload => ({\n  type: RELOAD_TASK_DETAIL,\n  readyToReload\n});\nexport const addTaskList = taskList => ({\n  type: ADD_TASK_LIST,\n  taskList\n});\nexport const reloadTaskList = readyToReload => ({\n  type: RELOAD_TASK_LIST,\n  readyToReload\n});\nexport const addOfferDetail = offerData => ({\n  type: ADD_OFFER_DETAIL,\n  offerData\n});\nexport const clearOfferDetail = offerData => ({\n  type: CLEAR_OFFER_DETAIL,\n  offerData\n});","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/redux/actions.js"],"names":["LOGIN_USER","ERROR_MSG","LOGOUT_USER","CHECK_USER","ADD_TASK","CLEAR_POST_TASK","SET_VALIDATION_HOC_CHECK","ADD_TASK_DETAIL","ADD_USER_ROLE","CLEAR_TASK_DETAIL","RELOAD_TASK_DETAIL","RELOAD_TASK_LIST","ADD_OFFER_DETAIL","CLEAR_OFFER_DETAIL","ADD_TASK_LIST","reqLogin","loginUser","email","type","logoutUser","localStorage","removeItem","displayLoginErr","msg","login","password","dispatch","result","status","setItem","error","response","data","checkUser","readyToBid","addTask","taskData","setValidationHocCheck","validationHocCheck","clearPostTask","addTaskDetail","addUserRole","userRole","clearTaskDetail","reloadTaskDetail","readyToReload","addTaskList","taskList","reloadTaskList","addOfferDetail","offerData","clearOfferDetail"],"mappings":"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","sourcesContent":["import { LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER, ADD_TASK, CLEAR_POST_TASK, SET_VALIDATION_HOC_CHECK, ADD_TASK_DETAIL, ADD_USER_ROLE, CLEAR_TASK_DETAIL, RELOAD_TASK_DETAIL, RELOAD_TASK_LIST, ADD_OFFER_DETAIL, CLEAR_OFFER_DETAIL, ADD_TASK_LIST } from \"./action-types\";\nimport { reqLogin } from \"../api/api\";\n\nexport const loginUser = email => ({ type: LOGIN_USER, email });\n\nexport const logoutUser = () => {\n  localStorage.removeItem(\"user\");\n  return { type: LOGOUT_USER };\n};\n\nexport const displayLoginErr = msg => ({ type: ERROR_MSG, msg });\n\nexport const login = ({ email, password }) => {\n  return async dispatch => {\n    try {\n      // send request\n      const result = await reqLogin(email, password);\n      if (result.status === 200) {\n        dispatch(loginUser(email));\n        localStorage.setItem(\"user\", email);\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        dispatch(displayLoginErr(error.response.data));\n      }\n    }\n  };\n};\n\nexport const checkUser = () => ({ type: CHECK_USER, readyToBid: true });\n\n\nexport const addTask = (taskData) => ({ type: ADD_TASK, taskData });\nexport const setValidationHocCheck = (validationHocCheck) => ({ type: SET_VALIDATION_HOC_CHECK, validationHocCheck })\nexport const clearPostTask = () => ({ type: CLEAR_POST_TASK });\n\n\nexport const addTaskDetail = (taskData) => ({ type: ADD_TASK_DETAIL, taskData });\nexport const addUserRole = (userRole) => ({ type: ADD_USER_ROLE, userRole });\nexport const clearTaskDetail = () => ({ type: CLEAR_TASK_DETAIL });\nexport const reloadTaskDetail = (readyToReload) => ({ type: RELOAD_TASK_DETAIL, readyToReload });\n\nexport const addTaskList = (taskList) => ({ type: ADD_TASK_LIST, taskList });\nexport const reloadTaskList = (readyToReload) => ({ type: RELOAD_TASK_LIST, readyToReload });\n\nexport const addOfferDetail = (offerData) => ({ type: ADD_OFFER_DETAIL, offerData });\nexport const clearOfferDetail = (offerData) => ({ type: CLEAR_OFFER_DETAIL, offerData });\n"]},"metadata":{},"sourceType":"module"}