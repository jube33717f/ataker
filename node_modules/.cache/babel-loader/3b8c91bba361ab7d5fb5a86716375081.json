{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/personal-info-check.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./personal-info-check.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport BankDetail from \"./subpages/bank-detail\";\nimport BillingAddress from \"./subpages/billing-address\";\nimport DateOfBirth from \"./subpages/date-of-birth\";\nimport UploadPhoto from \"./subpages/upload-photo\";\nimport MobileNumber from \"./subpages/mobile-number\";\nimport { reqUserInfo } from \"../../../../api/api\";\nimport { checkUser } from \"../../../../redux/actions\"; // TODO @SONIA\n\nclass PersonalInfoCheck extends Component {\n  constructor() {\n    super();\n\n    this.updateValidFields = userInfo => {\n      let validFields = [];\n\n      if (Object.keys(userInfo).length > 0) {\n        userInfo.photo && validFields.push('photo');\n        userInfo.dateOfBirth && validFields.push('dateOfBirth');\n        userInfo.mobileNumber && validFields.push('mobileNumber');\n        Object.keys(userInfo.bankDetail).length > 0 && validFields.push('bankDetail');\n        Object.keys(userInfo.billingAddr).length > 0 && validFields.push('billingAddr');\n      }\n\n      this.setState({\n        validFields\n      });\n    };\n\n    this.state = {\n      selectedFieldIndex: 0,\n      userInfo: '',\n      validFields: '',\n      fieldsToComplete: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const result = await reqUserInfo(this.props.user.email);\n\n      if (result.status === 0) {\n        this.setState({\n          userInfo: result.data\n        });\n        this.updateValidFields(result.data);\n      } else {\n        alert(\"User does not exist in fakeData.js!\");\n      }\n    } catch (error) {\n      alert(\"failed to make a request!\");\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // update userInfo everytime changing page.\n    if (this.state.selectedFieldIndex !== prevState.selectedFieldIndex) {\n      const result = await reqUserInfo(this.props.user.email);\n\n      if (result.status === 0) {\n        this.setState({\n          userInfo: result.data\n        });\n        this.updateValidFields(result.data);\n      } else {\n        alert(\"User does not exist in fakeData.js!\");\n      }\n\n      const fieldsToComplete = ['photo', 'bankDetail', 'billingAddr', 'dateOfBirth', 'mobileNumber'].filter(field => !this.state.validFields.includes(field));\n      this.setState({\n        fieldsToComplete\n      });\n    }\n  }\n\n  render() {\n    const {\n      selectedFieldIndex\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"info-check-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, selectedFieldIndex === 0 && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, [{\n      fieldName: 'photo',\n      labelName: 'Upload a Profile Picture',\n      placeholder: 'Upload your photo'\n    }, {\n      fieldName: 'bankDetail',\n      labelName: 'Provide your bank account details',\n      placeholder: 'Enter your bank details'\n    }, {\n      fieldName: 'billingAddr',\n      labelName: 'Provide a Billing Address',\n      placeholder: 'Enter your billing address'\n    }, {\n      fieldName: 'dateOfBirth',\n      labelName: 'Provide a Date of Birth',\n      placeholder: 'Enter your date of birth'\n    }, {\n      fieldName: 'mobileNumber',\n      labelName: 'Provide a Mobile Number',\n      placeholder: 'Enter your mobile number'\n    }].map((item, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item.labelName), React.createElement(\"div\", {\n      className: `info-check-form__item ${this.state.fieldsToComplete.includes(item.fieldName) && 'info-check-form__item--error'}`,\n      onClick: () => this.setState({\n        selectedFieldIndex: index + 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `form-tick ${this.state.validFields.includes(item.fieldName) && \"form-tick-on\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, item.placeholder)), React.createElement(FontAwesomeIcon, {\n      icon: faArrowRight,\n      className: \"icon__arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))))), selectedFieldIndex === 1 && React.createElement(UploadPhoto, {\n      userData: this.state.userInfo.photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), selectedFieldIndex === 2 && React.createElement(BankDetail, {\n      userData: this.state.userInfo.bankDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), selectedFieldIndex === 3 && React.createElement(BillingAddress, {\n      userData: this.state.userInfo.billingAddr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), selectedFieldIndex === 4 && React.createElement(DateOfBirth, {\n      userData: this.state.userInfo.dateOfBirth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), selectedFieldIndex === 5 && React.createElement(MobileNumber, {\n      userData: this.state.userInfo.mobileNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, selectedFieldIndex === 0 ? React.createElement(\"button\", {\n      onClick: () => {\n        if (this.state.validFields && this.state.validFields.length === 5) {\n          this.props.checkUser(); //通知redux用户的所有信息都已齐全\n        } else {\n          //在相应的field显示提示信息\n          const fieldsToComplete = ['photo', 'bankDetail', 'billingAddr', 'dateOfBirth', 'mobileNumber'].filter(field => !this.state.validFields.includes(field));\n          this.setState({\n            fieldsToComplete\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" Next \") : React.createElement(\"button\", {\n      onClick: async () => {\n        this.setState({\n          selectedFieldIndex: 0\n        });\n        const result = await reqUserInfo(this.props.user.email);\n\n        if (result.status === 0) {\n          this.setState({\n            userInfo: result.data\n          });\n          this.updateValidFields(result.data);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Before \")));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  checkUser\n})(PersonalInfoCheck);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/personal-info-check.js"],"names":["React","Component","connect","FontAwesomeIcon","faArrowRight","faUpload","BankDetail","BillingAddress","DateOfBirth","UploadPhoto","MobileNumber","reqUserInfo","checkUser","PersonalInfoCheck","constructor","updateValidFields","userInfo","validFields","Object","keys","length","photo","push","dateOfBirth","mobileNumber","bankDetail","billingAddr","setState","state","selectedFieldIndex","fieldsToComplete","componentDidMount","result","props","user","email","status","data","alert","error","componentDidUpdate","prevProps","prevState","filter","field","includes","render","fieldName","labelName","placeholder","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,4BAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,mCAAvC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,2BAA1B,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCZ,SAAhC,CAA0C;AACtCa,EAAAA,WAAW,GAAG;AACV;;AADU,SAwBdC,iBAxBc,GAwBOC,QAAD,IAAc;AAC9B,UAAIC,WAAW,GAAG,EAAlB;;AACA,UAAIC,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,MAAtB,GAA+B,CAAnC,EAAsC;AAClCJ,QAAAA,QAAQ,CAACK,KAAT,IAAkBJ,WAAW,CAACK,IAAZ,CAAiB,OAAjB,CAAlB;AACAN,QAAAA,QAAQ,CAACO,WAAT,IAAwBN,WAAW,CAACK,IAAZ,CAAiB,aAAjB,CAAxB;AACAN,QAAAA,QAAQ,CAACQ,YAAT,IAAyBP,WAAW,CAACK,IAAZ,CAAiB,cAAjB,CAAzB;AACAJ,QAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACS,UAArB,EAAiCL,MAAjC,GAA0C,CAA1C,IAA+CH,WAAW,CAACK,IAAZ,CAAiB,YAAjB,CAA/C;AACAJ,QAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACU,WAArB,EAAkCN,MAAlC,GAA2C,CAA3C,IAAgDH,WAAW,CAACK,IAAZ,CAAiB,aAAjB,CAAhD;AACH;;AACD,WAAKK,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACH,KAlCa;;AAEV,SAAKW,KAAL,GAAa;AACTC,MAAAA,kBAAkB,EAAE,CADX;AAETb,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITa,MAAAA,gBAAgB,EAAE;AAJT,KAAb;AAMH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,MAAM,GAAG,MAAMrB,WAAW,CAAC,KAAKsB,KAAL,CAAWC,IAAX,CAAgBC,KAAjB,CAAhC;;AACA,UAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,aAAKT,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAAEgB,MAAM,CAACK;AAAnB,SAAd;AACA,aAAKtB,iBAAL,CAAuBiB,MAAM,CAACK,IAA9B;AACH,OAHD,MAGO;AACHC,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,KARD,CAQE,OAAOC,KAAP,EAAc;AACZD,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ;;AAcD,QAAME,kBAAN,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;AAC3C;AACA,QAAI,KAAKd,KAAL,CAAWC,kBAAX,KAAkCa,SAAS,CAACb,kBAAhD,EAAoE;AAChE,YAAMG,MAAM,GAAG,MAAMrB,WAAW,CAAC,KAAKsB,KAAL,CAAWC,IAAX,CAAgBC,KAAjB,CAAhC;;AACA,UAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,aAAKT,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAAEgB,MAAM,CAACK;AAAnB,SAAd;AACA,aAAKtB,iBAAL,CAAuBiB,MAAM,CAACK,IAA9B;AACH,OAHD,MAGO;AACHC,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;;AACD,YAAMR,gBAAgB,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,aAAxB,EAAuC,aAAvC,EAAsD,cAAtD,EACpBa,MADoB,CACbC,KAAK,IAAI,CAAC,KAAKhB,KAAL,CAAWX,WAAX,CAAuB4B,QAAvB,CAAgCD,KAAhC,CADG,CAAzB;AAEA,WAAKjB,QAAL,CAAc;AAAEG,QAAAA;AAAF,OAAd;AACH;AACJ;;AACDgB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA;AAAF,QAAyB,KAAKD,KAApC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,kBAAkB,KAAK,CAAvB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAAEkB,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,SAAS,EAAE,0BAAjC;AAA6DC,MAAAA,WAAW,EAAE;AAA1E,KAAD,EACA;AAAEF,MAAAA,SAAS,EAAE,YAAb;AAA2BC,MAAAA,SAAS,EAAE,mCAAtC;AAA2EC,MAAAA,WAAW,EAAE;AAAxF,KADA,EAEA;AAAEF,MAAAA,SAAS,EAAE,aAAb;AAA4BC,MAAAA,SAAS,EAAE,2BAAvC;AAAoEC,MAAAA,WAAW,EAAE;AAAjF,KAFA,EAGA;AAAEF,MAAAA,SAAS,EAAE,aAAb;AAA4BC,MAAAA,SAAS,EAAE,yBAAvC;AAAkEC,MAAAA,WAAW,EAAE;AAA/E,KAHA,EAIA;AAAEF,MAAAA,SAAS,EAAE,cAAb;AAA6BC,MAAAA,SAAS,EAAE,yBAAxC;AAAmEC,MAAAA,WAAW,EAAE;AAAhF,KAJA,EAKKC,GALL,CAKS,CAACC,IAAD,EAAOC,KAAP,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,IAAI,CAACH,SAAb,CADJ,EAEI;AAAK,MAAA,SAAS,EAAG,yBAAwB,KAAKpB,KAAL,CAAWE,gBAAX,CAA4Be,QAA5B,CAAqCM,IAAI,CAACJ,SAA1C,KAAwD,8BAA+B,EAAhI;AACI,MAAA,OAAO,EAAE,MAAM,KAAKpB,QAAL,CAAc;AAAEE,QAAAA,kBAAkB,EAAEuB,KAAK,GAAG;AAA9B,OAAd,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,aAAY,KAAKxB,KAAL,CAAWX,WAAX,CAAuB4B,QAAvB,CAAgCM,IAAI,CAACJ,SAArC,KAAmD,cAAe,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQI,IAAI,CAACF,WAAb,CAFJ,CAFJ,EAMI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7C,YAAvB;AAAqC,MAAA,SAAS,EAAC,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFJ,CANR,CAFR,CAFR,EAyBKyB,kBAAkB,KAAK,CAAvB,IAA4B,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWZ,QAAX,CAAoBK,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBjC,EA0BKQ,kBAAkB,KAAK,CAAvB,IAA4B,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWZ,QAAX,CAAoBS,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BjC,EA2BKI,kBAAkB,KAAK,CAAvB,IAA4B,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWZ,QAAX,CAAoBU,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BjC,EA4BKG,kBAAkB,KAAK,CAAvB,IAA4B,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWZ,QAAX,CAAoBO,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BjC,EA6BKM,kBAAkB,KAAK,CAAvB,IAA4B,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWZ,QAAX,CAAoBQ,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BjC,EA+BI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,kBAAkB,KAAK,CAAvB,GAEG;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,YAAI,KAAKD,KAAL,CAAWX,WAAX,IAA0B,KAAKW,KAAL,CAAWX,WAAX,CAAuBG,MAAvB,KAAkC,CAAhE,EAAmE;AAC/D,eAAKa,KAAL,CAAWrB,SAAX,GAD+D,CACxC;AAC1B,SAFD,MAEO;AACH;AACA,gBAAMkB,gBAAgB,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,aAAxB,EAAuC,aAAvC,EAAsD,cAAtD,EAAsEa,MAAtE,CAA6EC,KAAK,IAAI,CAAC,KAAKhB,KAAL,CAAWX,WAAX,CAAuB4B,QAAvB,CAAgCD,KAAhC,CAAvF,CAAzB;AACA,eAAKjB,QAAL,CAAc;AAAEG,YAAAA;AAAF,WAAd;AACH;AACJ,OARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,GAYG;AAAQ,MAAA,OAAO,EAAE,YAAY;AACzB,aAAKH,QAAL,CAAc;AAAEE,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACA,cAAMG,MAAM,GAAG,MAAMrB,WAAW,CAAC,KAAKsB,KAAL,CAAWC,IAAX,CAAgBC,KAAjB,CAAhC;;AACA,YAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,eAAKT,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAAEgB,MAAM,CAACK;AAAnB,WAAd;AACA,eAAKtB,iBAAL,CAAuBiB,MAAM,CAACK,IAA9B;AACH;AACJ,OAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbR,CA/BJ,CADJ;AA2DH;;AAlHqC;;AAoH1C,eAAenC,OAAO,CAAC0B,KAAK,KAAK;AAAEM,EAAAA,IAAI,EAAEN,KAAK,CAACM;AAAd,CAAL,CAAN,EAAkC;AAAEtB,EAAAA;AAAF,CAAlC,CAAP,CAAwDC,iBAAxD,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./personal-info-check.scss\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport BankDetail from \"./subpages/bank-detail\";\nimport BillingAddress from \"./subpages/billing-address\";\nimport DateOfBirth from \"./subpages/date-of-birth\";\nimport UploadPhoto from \"./subpages/upload-photo\";\nimport MobileNumber from \"./subpages/mobile-number\";\nimport { reqUserInfo } from \"../../../../api/api\";\nimport { checkUser } from \"../../../../redux/actions\"\n// TODO @SONIA\n\nclass PersonalInfoCheck extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedFieldIndex: 0,\n            userInfo: '',\n            validFields: '',\n            fieldsToComplete: []\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const result = await reqUserInfo(this.props.user.email);\n            if (result.status === 0) {\n                this.setState({ userInfo: result.data });\n                this.updateValidFields(result.data);\n            } else {\n                alert(\"User does not exist in fakeData.js!\");\n            }\n        } catch (error) {\n            alert(\"failed to make a request!\");\n        }\n    }\n\n    updateValidFields = (userInfo) => {\n        let validFields = [];\n        if (Object.keys(userInfo).length > 0) {\n            userInfo.photo && validFields.push('photo');\n            userInfo.dateOfBirth && validFields.push('dateOfBirth');\n            userInfo.mobileNumber && validFields.push('mobileNumber');\n            Object.keys(userInfo.bankDetail).length > 0 && validFields.push('bankDetail');\n            Object.keys(userInfo.billingAddr).length > 0 && validFields.push('billingAddr');\n        }\n        this.setState({ validFields });\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        // update userInfo everytime changing page.\n        if (this.state.selectedFieldIndex !== prevState.selectedFieldIndex) {\n            const result = await reqUserInfo(this.props.user.email);\n            if (result.status === 0) {\n                this.setState({ userInfo: result.data });\n                this.updateValidFields(result.data);\n            } else {\n                alert(\"User does not exist in fakeData.js!\");\n            }\n            const fieldsToComplete = ['photo', 'bankDetail', 'billingAddr', 'dateOfBirth', 'mobileNumber']\n                .filter(field => !this.state.validFields.includes(field))\n            this.setState({ fieldsToComplete });\n        }\n    }\n    render() {\n        const { selectedFieldIndex } = this.state;\n\n        return (\n            <div className=\"info-check-form\">\n                {selectedFieldIndex === 0 &&\n                    <ul>\n                        {\n                            [{ fieldName: 'photo', labelName: 'Upload a Profile Picture', placeholder: 'Upload your photo' },\n                            { fieldName: 'bankDetail', labelName: 'Provide your bank account details', placeholder: 'Enter your bank details' },\n                            { fieldName: 'billingAddr', labelName: 'Provide a Billing Address', placeholder: 'Enter your billing address' },\n                            { fieldName: 'dateOfBirth', labelName: 'Provide a Date of Birth', placeholder: 'Enter your date of birth' },\n                            { fieldName: 'mobileNumber', labelName: 'Provide a Mobile Number', placeholder: 'Enter your mobile number' }]\n                                .map((item, index) =>\n                                    <li>\n                                        <label>{item.labelName}</label>\n                                        <div className={`info-check-form__item ${this.state.fieldsToComplete.includes(item.fieldName) && 'info-check-form__item--error'}`}\n                                            onClick={() => this.setState({ selectedFieldIndex: index + 1 })}>\n                                            <div>\n                                                <div className={`form-tick ${this.state.validFields.includes(item.fieldName) && \"form-tick-on\"}`}></div>\n                                                <label>{item.placeholder}</label>\n                                            </div>\n                                            <FontAwesomeIcon icon={faArrowRight} className=\"icon__arrow-right\" />\n                                        </div>\n                                    </li>\n                                )\n                        }\n                    </ul>\n                }\n                {selectedFieldIndex === 1 && <UploadPhoto userData={this.state.userInfo.photo} />}\n                {selectedFieldIndex === 2 && <BankDetail userData={this.state.userInfo.bankDetail} />}\n                {selectedFieldIndex === 3 && <BillingAddress userData={this.state.userInfo.billingAddr} />}\n                {selectedFieldIndex === 4 && <DateOfBirth userData={this.state.userInfo.dateOfBirth} />}\n                {selectedFieldIndex === 5 && <MobileNumber userData={this.state.userInfo.mobileNumber} />}\n\n                <div className=\"bottom-buttons\">\n                    {selectedFieldIndex === 0\n                        ?\n                        <button onClick={() => {\n                            if (this.state.validFields && this.state.validFields.length === 5) {\n                                this.props.checkUser();//通知redux用户的所有信息都已齐全\n                            } else {\n                                //在相应的field显示提示信息\n                                const fieldsToComplete = ['photo', 'bankDetail', 'billingAddr', 'dateOfBirth', 'mobileNumber'].filter(field => !this.state.validFields.includes(field))\n                                this.setState({ fieldsToComplete })\n                            }\n                        }}> Next </button>\n                        :\n                        <button onClick={async () => {\n                            this.setState({ selectedFieldIndex: 0 });\n                            const result = await reqUserInfo(this.props.user.email);\n                            if (result.status === 0) {\n                                this.setState({ userInfo: result.data });\n                                this.updateValidFields(result.data);\n                            }\n                        }}> Before </button>\n                    }\n\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default connect(state => ({ user: state.user }), { checkUser })(PersonalInfoCheck);\n"]},"metadata":{},"sourceType":"module"}