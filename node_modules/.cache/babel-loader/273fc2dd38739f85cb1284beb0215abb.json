{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/billing-address.js\";\nimport React, { Component } from \"react\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\";\nimport { reqUpdateUser } from \"../../../../../api/api\";\nimport { connect } from \"react-redux\";\nimport InputComponent from \"../../../../../hoc/inputComponent\"; // TODO @SONIA\n\nclass BillingAddress extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    this.props.setHocData(this.props.userData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Your billing address will be verified before you can receive payments.\"), [{\n      title: \"Address Line 1\",\n      name: \"addressLine1\"\n    }, {\n      title: \"Address Line 2 (Optional)\",\n      name: \"addressLine2\"\n    }, {\n      title: \"Surburb\",\n      name: \"suburb\"\n    }, {\n      title: \"State\",\n      name: \"state\"\n    }, {\n      title: \"Postcode\",\n      name: \"postCode\"\n    }, {\n      title: \"Country\",\n      name: \"country\"\n    }].map(item => React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(InputComponent, Object.assign({}, this.props, {\n      title: item.title,\n      name: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      className: \"green-button\",\n      onClick: async () => {\n        if (await this.props.okToSubmit()) {\n          const result = await reqUpdateUser(this.props.user.email, {\n            billingAddress: this.props.values\n          });\n\n          if (result.status === 0) {\n            alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Add billing address\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Your address will never been shown publicly, it is only used for account verification purposes.\"));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {})(ValidationHoc(BillingAddress, [\"addressLine1\", \"suburb\", \"state\", \"postCode\", \"country\"]));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/make-an-offer/subpages/personal-info-check/subpages/billing-address.js"],"names":["React","Component","ValidationHoc","reqUpdateUser","connect","InputComponent","BillingAddress","constructor","componentDidMount","props","setHocData","userData","render","title","name","map","item","okToSubmit","result","user","email","billingAddress","values","status","alert","JSON","stringify","data","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,mCAA3B,C,CAEA;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACC,SAAnC,CAA6C;AACzCM,EAAAA,WAAW,GAAG;AACV;AAEH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWE,QAAjC;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADJ,EAGQ,CAAC;AAAEC,MAAAA,KAAK,EAAE,gBAAT;AAA2BC,MAAAA,IAAI,EAAE;AAAjC,KAAD,EACA;AAAED,MAAAA,KAAK,EAAE,2BAAT;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KADA,EAEA;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAFA,EAGA;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAHA,EAIA;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAJA,EAKA;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KALA,EAMKC,GANL,CAMSC,IAAI,IACL;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD,oBAAoB,KAAKP,KAAzB;AAAgC,MAAA,KAAK,EAAEO,IAAI,CAACH,KAA5C;AAAmD,MAAA,IAAI,EAAEG,IAAI,CAACF,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAPR,CAHR,EAgBI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AACI,MAAA,OAAO,EAAE,YAAY;AACjB,YAAI,MAAM,KAAKL,KAAL,CAAWQ,UAAX,EAAV,EAAmC;AAC/B,gBAAMC,MAAM,GAAG,MAAMf,aAAa,CAAC,KAAKM,KAAL,CAAWU,IAAX,CAAgBC,KAAjB,EAAwB;AAAEC,YAAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWa;AAA7B,WAAxB,CAAlC;;AACA,cAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrBC,YAAAA,KAAK,CAAE,+BAA8BC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACS,IAAtB,CAA4B,EAA5D,CAAL;AACH;AACJ;AACJ,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAhBJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGA3BJ,CADJ;AA+BH;;AAxCwC;;AA2C7C,eAAevB,OAAO,CAACwB,KAAK,KAAK;AAAET,EAAAA,IAAI,EAAES,KAAK,CAACT;AAAd,CAAL,CAAN,EAAkC,EAAlC,CAAP,CACXjB,aAAa,CAACI,cAAD,EAAiB,CAAC,cAAD,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,UAApC,EAAgD,SAAhD,CAAjB,CADF,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ValidationHoc from \"../../../../../hoc/validationHoc\"\nimport { reqUpdateUser } from \"../../../../../api/api\"\nimport { connect } from \"react-redux\";\nimport InputComponent from \"../../../../../hoc/inputComponent\";\n\n// TODO @SONIA\n\nclass BillingAddress extends React.Component {\n    constructor() {\n        super();\n\n    }\n    componentDidMount() {\n        this.props.setHocData(this.props.userData)\n    }\n    render() {\n        return (\n            <div>\n                <p>Your billing address will be verified before you can receive payments.</p>\n                {\n                    [{ title: \"Address Line 1\", name: \"addressLine1\" },\n                    { title: \"Address Line 2 (Optional)\", name: \"addressLine2\" },\n                    { title: \"Surburb\", name: \"suburb\" },\n                    { title: \"State\", name: \"state\" },\n                    { title: \"Postcode\", name: \"postCode\" },\n                    { title: \"Country\", name: \"country\" }]\n                        .map(item =>\n                            <div className=\"form__content--item\">\n                                <InputComponent {...this.props} title={item.title} name={item.name} />\n                            </div>\n                        )\n                }\n\n                <button className=\"green-button\"\n                    onClick={async () => {\n                        if (await this.props.okToSubmit()) {\n                            const result = await reqUpdateUser(this.props.user.email, { billingAddress: this.props.values });\n                            if (result.status === 0) {\n                                alert(`succeed to add bank detail! ${JSON.stringify(result.data)}`);\n                            }\n                        }\n                    }}>\n                    Add billing address\n                </button>\n                <p>Your address will never been shown publicly, it is only used for account verification purposes.</p>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({ user: state.user }), {})(\n    ValidationHoc(BillingAddress, [\"addressLine1\", \"suburb\", \"state\", \"postCode\", \"country\"]));"]},"metadata":{},"sourceType":"module"}