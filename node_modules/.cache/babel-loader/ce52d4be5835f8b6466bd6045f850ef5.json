{"ast":null,"code":"import { LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER } from \"./action-types\";\nimport { reqLogin } from \"../api/api\";\nexport const loginUser = email => ({\n  type: LOGIN_USER,\n  email\n});\nexport const logoutUser = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: LOGOUT_USER\n  };\n};\nexport const displayLoginErr = msg => ({\n  type: ERROR_MSG,\n  msg\n});\nexport const login = ({\n  email,\n  password\n}) => {\n  return async dispatch => {\n    try {\n      // send request\n      const result = await reqLogin(email, password);\n\n      if (result.status === 0) {\n        dispatch(loginUser(email));\n        localStorage.setItem(\"user\", email);\n      }\n    } catch (error) {\n      dispatch(displayLoginErr(error));\n    }\n  };\n};\nexport const checkUser = () => ({\n  type: CHECK_USER,\n  readyToBid: true\n}); //user infomation is ready to make an offer.","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/redux/actions.js"],"names":["LOGIN_USER","ERROR_MSG","LOGOUT_USER","CHECK_USER","reqLogin","loginUser","email","type","logoutUser","localStorage","removeItem","displayLoginErr","msg","login","password","dispatch","result","status","setItem","error","checkUser","readyToBid"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,EAA6CC,UAA7C,QAA+D,gBAA/D;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,SAAS,GAAGC,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAEP,UAAR;AAAoBM,EAAAA;AAApB,CAAL,CAAvB;AAEP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,SAAO;AAAEH,IAAAA,IAAI,EAAEL;AAAR,GAAP;AACD,CAHM;AAKP,OAAO,MAAMS,eAAe,GAAGC,GAAG,KAAK;AAAEL,EAAAA,IAAI,EAAEN,SAAR;AAAmBW,EAAAA;AAAnB,CAAL,CAA3B;AAEP,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEP,EAAAA,KAAF;AAASQ,EAAAA;AAAT,CAAD,KAAyB;AAC5C,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF;AACA,YAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACE,KAAD,EAAQQ,QAAR,CAA7B;;AACA,UAAIE,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvBF,QAAAA,QAAQ,CAACV,SAAS,CAACC,KAAD,CAAV,CAAR;AACAG,QAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BZ,KAA7B;AACD;AACF,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdJ,MAAAA,QAAQ,CAACJ,eAAe,CAACQ,KAAD,CAAhB,CAAR;AACD;AACF,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMC,SAAS,GAAG,OAAO;AAAEb,EAAAA,IAAI,EAAEJ,UAAR;AAAoBkB,EAAAA,UAAU,EAAE;AAAhC,CAAP,CAAlB,C,CAAkE","sourcesContent":["import { LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER } from \"./action-types\";\nimport { reqLogin } from \"../api/api\";\n\nexport const loginUser = email => ({ type: LOGIN_USER, email });\n\nexport const logoutUser = () => {\n  localStorage.removeItem(\"user\");\n  return { type: LOGOUT_USER };\n};\n\nexport const displayLoginErr = msg => ({ type: ERROR_MSG, msg });\n\nexport const login = ({ email, password }) => {\n  return async dispatch => {\n    try {\n      // send request\n      const result = await reqLogin(email, password);\n      if (result.status === 0) {\n        dispatch(loginUser(email));\n        localStorage.setItem(\"user\", email);\n      }\n    } catch (error) {\n      dispatch(displayLoginErr(error));\n    }\n  };\n};\n\nexport const checkUser = () => ({ type: CHECK_USER, readyToBid: true }); //user infomation is ready to make an offer.\n\n"]},"metadata":{},"sourceType":"module"}