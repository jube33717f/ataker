{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/subpages/taskDescription/taskDescription.js\";\nimport React, { Component } from \"react\";\nimport InputComponent from \"../../../../hoc/inputComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ValidationHoc from \"../../../../hoc/validationHoc\";\nimport { connect } from \"react-redux\";\nimport { addTask, setValidationHocCheck } from \"../../../../redux/actions\";\nimport { withRouter } from \"react-router-dom\"; // TODO @SONIA\n\nclass TaskDescription extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    const {\n      taskTitle,\n      taskDetail\n    } = this.props.postTask.taskData;\n    this.props.setHocData({\n      taskTitle,\n      taskDetail\n    });\n    this.props.setValidationHocCheck(this.props.okToSubmit);\n    const taskId = this.props.match.params.id;\n\n    if (taskId && !this.props.postTask.taskData && this.props.taskDetail.taskData) {\n      const {\n        title,\n        detail\n      } = this.props.taskDetail.taskData.taskDetail;\n      const taskData = {\n        taskTitle: title,\n        taskDetail: detail\n      };\n      this.props.setHocData(taskData);\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.props.addTask(this.props.values);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: `form__content ${this.props.pageMovementDirection}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"What do you need done?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"This'll be the title of your task - e.g. Help move my sofa\"), React.createElement(InputComponent, Object.assign({}, this.props, {\n      name: \"taskTitle\",\n      label: \"taskTitle\",\n      inputClassName: \"input-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskDetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"What are the details?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Be as specific as you can about what needs doing\"), React.createElement(InputComponent, Object.assign({}, this.props, {\n      textareaOption: true,\n      name: \"taskDetail\",\n      label: \"taskDetail\",\n      inputClassName: \"input-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(state => ({\n  postTask: state.postTask,\n  taskDetail: state.taskDetail\n}), {\n  addTask,\n  setValidationHocCheck\n})(ValidationHoc(withRouter(TaskDescription), [\"taskTitle\", \"taskDetail\"]));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/subpages/taskDescription/taskDescription.js"],"names":["React","Component","InputComponent","FontAwesomeIcon","ValidationHoc","connect","addTask","setValidationHocCheck","withRouter","TaskDescription","constructor","props","componentDidMount","taskTitle","taskDetail","postTask","taskData","setHocData","okToSubmit","taskId","match","params","id","title","detail","componentDidUpdate","prevProps","prevState","JSON","stringify","values","render","pageMovementDirection","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InputComponent from \"../../../../hoc/inputComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport ValidationHoc from \"../../../../hoc/validationHoc\";\nimport { connect } from \"react-redux\";\nimport { addTask, setValidationHocCheck } from \"../../../../redux/actions\"\nimport { withRouter } from \"react-router-dom\";\n// TODO @SONIA\nclass TaskDescription extends Component {\n    constructor(props) {\n        super(props);\n    }\n    async componentDidMount() {\n        const { taskTitle, taskDetail } = this.props.postTask.taskData;\n        this.props.setHocData({ taskTitle, taskDetail });\n        this.props.setValidationHocCheck(this.props.okToSubmit)\n\n        const taskId = this.props.match.params.id\n        if (taskId && !this.props.postTask.taskData && this.props.taskDetail.taskData) {\n            const { title, detail } = this.props.taskDetail.taskData.taskDetail;\n            const taskData = { taskTitle: title, taskDetail: detail };\n            this.props.setHocData(taskData);\n        }\n    }\n    async componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n            this.props.addTask(this.props.values)\n        }\n    }\n    render() {\n        return (\n            <div className={`form__content ${this.props.pageMovementDirection}`}>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"taskTitle\">What do you need done?</label>\n                    <p>This'll be the title of your task - e.g. Help move my sofa</p>\n                    <InputComponent {...this.props} name=\"taskTitle\" label=\"taskTitle\" inputClassName=\"input-area\" />\n                </div>\n                <div className=\"form__content--item\">\n                    <label htmlFor=\"taskDetail\">What are the details?</label>\n                    <p>Be as specific as you can about what needs doing</p>\n                    <InputComponent {...this.props} textareaOption={true} name=\"taskDetail\" label=\"taskDetail\" inputClassName=\"input-area\" />\n                </div></div>\n        );\n    }\n}\nexport default connect(state => ({ postTask: state.postTask, taskDetail: state.taskDetail }), { addTask, setValidationHocCheck })(\n    ValidationHoc(withRouter(TaskDescription), [\"taskTitle\", \"taskDetail\"]))\n\n"]},"metadata":{},"sourceType":"module"}