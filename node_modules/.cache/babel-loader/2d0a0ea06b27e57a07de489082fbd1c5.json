{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/post-task.js\";\nimport React, { Component } from \"react\";\nimport BlurBackgroundHoc from \"../../hoc/blurBackgroundHoc\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport TaskBudget from \"./subpages/taskBudget/taskBudget\";\nimport TaskDescription from \"./subpages/taskDescription/taskDescription\";\nimport TaskLocationAndTime from \"./subpages/taskLocationAndTime/taskLocationAndTime\";\nimport { connect } from \"react-redux\";\nimport { clearPostTask, reloadTaskDetail, reloadTaskList } from \"../../redux/actions\";\nimport { withRouter } from \"react-router-dom\";\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport TaskLAT from \"./subpages/taskLocationAndTime/taskLAT\";\nimport \"./post-task.scss\";\nimport { reqPostTask, reqUpdateTask } from \"../../api/api\"; // TODO @SONIA\n\nclass PostTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNum: 0,\n      pageMovementDirection: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.blurBackground();\n    this.setState({\n      pageNum: 1\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.resetBackground();\n    this.props.clearPostTask();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container--not-blured\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttask-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.pageNum === 1 && 'Tell us what you need done?', this.state.pageNum === 2 && 'Say where & when', this.state.pageNum === 3 && 'Suggest how much', React.createElement(FontAwesomeIcon, {\n      icon: faWindowClose,\n      className: \"button-close\",\n      onClick: () => {\n        this.props.history.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: `progress-bar ${this.state.pageNum === 1 && \"first-page\" || this.state.pageNum === 2 && \"second-page\" || this.state.pageNum === 3 && \"third-page\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), this.state.pageNum === 1 && React.createElement(TaskDescription, {\n      pageNum: this.state.pageNum,\n      pageMovementDirection: this.state.pageMovementDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.pageNum === 2 && React.createElement(TaskLAT, {\n      pageNum: this.state.pageNum,\n      pageMovementDirection: this.state.pageMovementDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.state.pageNum === 3 && React.createElement(TaskBudget, {\n      pageNum: this.state.pageNum,\n      pageMovementDirection: this.state.pageMovementDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.pageNum > 1 && React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          pageNum: this.state.pageNum - 1,\n          pageMovementDirection: 'backward-movement'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Before\"), this.state.pageNum < 3 ? React.createElement(\"button\", {\n      onClick: async () => {\n        if (await this.props.postTask.validationHocCheck()) {\n          this.setState({\n            pageNum: this.state.pageNum + 1,\n            pageMovementDirection: 'forward-movement'\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Next\") : React.createElement(\"button\", {\n      onClick: async () => {\n        if (await this.props.postTask.validationHocCheck()) {\n          try {\n            const {\n              taskData\n            } = this.props.postTask;\n            const dataToSend = {\n              title: taskData.taskTitle,\n              detail: taskData.taskDetail,\n              place: taskData.taskLocation,\n              dueDate: taskData.taskDuedate,\n              price: taskData.taskBudget\n            };\n            let result;\n            const path = this.props.match.path;\n\n            if (path.includes(\"post\")) {\n              result = await reqPostTask(this.props.user.email, dataToSend); //这里email和taskdata的顺序不能错，不然会有cors？\n            } else {\n              result = await reqUpdateTask(this.props.match.params.id, dataToSend);\n            }\n\n            if (result.status === 200) {\n              if (path.includes(\"post\")) {\n                this.props.reloadTaskList(true);\n              } else {\n                this.props.reloadTaskDetail(true);\n              }\n\n              this.props.history.goBack();\n            }\n          } catch (error) {\n            alert(\"failed to post task\");\n          } // alert(JSON.stringify(this.props.postTask.taskData))\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Get quotes\")))));\n  }\n\n}\n\nexport default connect(state => ({\n  postTask: state.postTask,\n  user: state.user\n}), {\n  clearPostTask,\n  reloadTaskDetail\n})(withRouter(BlurBackgroundHoc(PostTask))); // export default ;\n// export default GoogleApiWrapper({\n//         apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558',\n//         libraries: [\"places\",'geocoding']\n//       },\n//     connect(state => ({ postTask: state.postTask ,user: state.user}), { clearPostTask , reloadTaskDetail})(withRouter(BlurBackgroundHoc(PostTask)))\n//         )(PostTask);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/post-task.js"],"names":["React","Component","BlurBackgroundHoc","FontAwesomeIcon","faWindowClose","TaskBudget","TaskDescription","TaskLocationAndTime","connect","clearPostTask","reloadTaskDetail","reloadTaskList","withRouter","GoogleApiWrapper","TaskLAT","reqPostTask","reqUpdateTask","PostTask","constructor","props","state","pageNum","pageMovementDirection","componentDidMount","blurBackground","setState","componentWillUnmount","resetBackground","render","history","goBack","postTask","validationHocCheck","taskData","dataToSend","title","taskTitle","detail","taskDetail","place","taskLocation","dueDate","taskDuedate","price","taskBudget","result","path","match","includes","user","email","params","id","status","error","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BlurBackgroundHoc from \"../../hoc/blurBackgroundHoc\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport TaskBudget from \"./subpages/taskBudget/taskBudget\"\nimport TaskDescription from \"./subpages/taskDescription/taskDescription\"\nimport TaskLocationAndTime from \"./subpages/taskLocationAndTime/taskLocationAndTime\"\nimport { connect } from \"react-redux\"\nimport { clearPostTask, reloadTaskDetail, reloadTaskList } from \"../../redux/actions\"\nimport { withRouter } from \"react-router-dom\"\nimport { GoogleApiWrapper ,} from 'google-maps-react';\nimport TaskLAT from \"./subpages/taskLocationAndTime/taskLAT\"\nimport \"./post-task.scss\"\nimport { reqPostTask, reqUpdateTask } from \"../../api/api\";\n\n// TODO @SONIA\nclass PostTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNum: 0,\n            pageMovementDirection: '',\n        }\n    }\n\n    async componentDidMount() {\n        this.props.blurBackground();\n        this.setState({ pageNum: 1 })\n    }\n\n    componentWillUnmount() {\n        this.props.resetBackground();\n        this.props.clearPostTask();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"container--not-blured\">\n                    <div className=\"posttask-form\">\n                        <div className=\"form__header\">\n                            <div>\n                                {this.state.pageNum === 1 && 'Tell us what you need done?'}\n                                {this.state.pageNum === 2 && 'Say where & when'}\n                                {this.state.pageNum === 3 && 'Suggest how much'}\n                                <FontAwesomeIcon icon={faWindowClose} className=\"button-close\"\n                                    onClick={() => {\n                                        this.props.history.goBack();\n                                    }} />\n                            </div>\n                            <div className={`progress-bar ${\n                                (this.state.pageNum === 1 && \"first-page\") ||\n                                (this.state.pageNum === 2 && \"second-page\") ||\n                                (this.state.pageNum === 3 && \"third-page\")\n                                }`}></div>\n                        </div>\n\n                        {this.state.pageNum === 1 &&\n                            <TaskDescription pageNum={this.state.pageNum}\n                                pageMovementDirection={this.state.pageMovementDirection} />\n                        }\n\n                        {this.state.pageNum === 2 &&\n                        <TaskLAT pageNum={this.state.pageNum}\n                        pageMovementDirection={this.state.pageMovementDirection}/>\n                           \n                        }\n\n                        {this.state.pageNum === 3 &&\n                            <TaskBudget pageNum={this.state.pageNum}\n                                pageMovementDirection={this.state.pageMovementDirection} />\n                        }\n\n                        <div className=\"bottom-buttons\">\n                            {this.state.pageNum > 1\n                                &&\n                                <button onClick={() => {\n                                    this.setState({ pageNum: this.state.pageNum - 1, pageMovementDirection: 'backward-movement' })\n                                }}>\n                                    Before\n                                </button>\n                            }\n                            {this.state.pageNum < 3\n                                ?\n                                <button onClick={async () => {\n                                    if (await this.props.postTask.validationHocCheck()) {\n                                        this.setState({ pageNum: this.state.pageNum + 1, pageMovementDirection: 'forward-movement' });\n                                    }\n                                }}>\n                                    Next\n                                </button>\n                                :\n                                <button onClick={async () => {\n                                    if (await this.props.postTask.validationHocCheck()) {\n                                        try {\n                                            const { taskData } = this.props.postTask;\n                                            const dataToSend = {\n                                                title: taskData.taskTitle,\n                                                detail: taskData.taskDetail,\n                                                place: taskData.taskLocation,\n                                                dueDate: taskData.taskDuedate,\n                                                price: taskData.taskBudget\n                                            };\n                                            let result;\n                                            const path = this.props.match.path;\n                                            if (path.includes(\"post\")) {\n                                                result = await reqPostTask(\n                                                    this.props.user.email,\n                                                    dataToSend\n                                                );//这里email和taskdata的顺序不能错，不然会有cors？\n                                            } else {\n                                                result = await reqUpdateTask(\n                                                    this.props.match.params.id,\n                                                    dataToSend\n                                                );\n                                            }\n                                            if (result.status === 200) {\n                                                if (path.includes(\"post\")) {\n                                                    this.props.reloadTaskList(true);\n                                                } else {\n                                                    this.props.reloadTaskDetail(true);\n                                                }\n                                                this.props.history.goBack();\n                                            }\n                                        } catch (error) {\n                                            alert(\"failed to post task\");\n                                        }\n                                        // alert(JSON.stringify(this.props.postTask.taskData))\n                                    }\n                                }}>\n                                    Get quotes\n                                </button>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default  connect(state => ({ postTask: state.postTask, user: state.user }), { clearPostTask, reloadTaskDetail })(\n    withRouter(BlurBackgroundHoc(PostTask)));\n  \n// export default ;\n// export default GoogleApiWrapper({\n//         apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558',\n//         libraries: [\"places\",'geocoding']\n//       },\n//     connect(state => ({ postTask: state.postTask ,user: state.user}), { clearPostTask , reloadTaskDetail})(withRouter(BlurBackgroundHoc(PostTask)))\n//         )(PostTask); \n"]},"metadata":{},"sourceType":"module"}