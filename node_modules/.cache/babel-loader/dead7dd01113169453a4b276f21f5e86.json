{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport \"./map-box.scss\"; // TODO @DAVIN\n\nconst mapStyles = {\n  map: {\n    width: '80%',\n    height: '100%'\n  }\n};\nexport class MapBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  initialize() {\n    var locations = [['DESCRIPTION', 41.926979, 12.517385, 3], ['DESCRIPTION', 41.914873, 12.506486, 2], ['DESCRIPTION', 41.918574, 12.507201, 1]]; // var map = new google.maps.Map(document.getElementById('map'), {\n    //   zoom: 15,\n    //   center: new google.maps.LatLng(41.923, 12.513),\n    //   mapTypeId: google.maps.MapTypeId.ROADMAP\n    // });\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker, i;\n\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        map: map\n      });\n      google.maps.event.addListener(marker, 'click', function (marker, i) {\n        return function () {\n          infowindow.setContent(locations[i][0]);\n          infowindow.open(map, marker);\n        };\n      }(marker, i));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mapbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","mapStyles","map","width","height","MapBox","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","initialize","locations","infowindow","google","maps","i","length","position","LatLng","event","addListener","setContent","open","render","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker  } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport \"./map-box.scss\";\n// TODO @DAVIN\nconst mapStyles = {\n  map: {\n    \n    width: '80%',\n    height: '100%'\n  }\n};\n\nexport class MapBox extends Component {\n  \n  state = {\n      \n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n  \n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  initialize() {\n    var locations = [\n      ['DESCRIPTION', 41.926979, 12.517385, 3],\n      ['DESCRIPTION', 41.914873, 12.506486, 2],\n      ['DESCRIPTION', 41.918574, 12.507201, 1]\n    ];\n\n    // var map = new google.maps.Map(document.getElementById('map'), {\n    //   zoom: 15,\n    //   center: new google.maps.LatLng(41.923, 12.513),\n    //   mapTypeId: google.maps.MapTypeId.ROADMAP\n    // });\n\n    var infowindow = new google.maps.InfoWindow();\n\n    var marker, i;\n\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        map: map\n      });\n\n      google.maps.event.addListener(marker, 'click', (function(marker, i) {\n        return function() {\n          infowindow.setContent(locations[i][0]);\n          infowindow.open(map, marker);\n        }\n      })(marker, i));\n    }\n  }\n  render() {\n    return (\n      <div className=\"mapbox\">\n        <CurrentLocation\n          centerAroundCurrentLocation\n          google={this.props.google}\n        >\n          \n          <Marker onClick={this.onMarkerClick} name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        \n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\n\n"]},"metadata":{},"sourceType":"module"}