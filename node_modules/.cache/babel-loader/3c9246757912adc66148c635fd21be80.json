{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport dateFormatter from \"../../../../utils/date-formatter\";\nimport { connect } from 'react-redux';\nimport { reqTaskList } from \"../../../../api/api\";\nimport { changeDistance, changePrice, changeLocation } from '../../redux/actions';\nimport { withRouter } from \"react-router-dom\"; // TODO @JUbi\n// const mapStyles = {\n//   map: {\n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n//     opacity:'0.85'\n//   }\n// } \n\nconst {\n  BASE\n} = global.constants;\nexport class MapBox extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      markers: [false, false, false],\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      changed: false,\n      zoom: '',\n      newsNum: ''\n    };\n  } //   async componentDidMount() {\n  //   console.log(this.props.)\n  // try {\n  //   const result = await reqTaskList();\n  //   if (result.status === 200) {\n  //     this.props.addTaskList(result.data.taskList);\n  //     this.setState({ newsNum: result.data.taskList.length });\n  //   }\n  // } catch (error) {\n  //   alert(\"failed to request task list\");\n  // }\n  //   }\n\n\n  async componentDidUpdate(prevProps, prevState) {\n    // console.log(prevProps)\n    if (prevProps.taskList.listData !== this.props.taskList.listData) {\n      this.forceUpdate();\n    }\n\n    if (prevProps.locations !== this.props.locations) {\n      console.log(\"changed\");\n      this.forceUpdate();\n    }\n\n    if (prevProps.distance !== this.props.distance) {\n      //calculate zoom \n      console.log('distance', this.props.distance);\n      let l = document.querySelector('.mapbox').clientWidth; //px\n\n      console.log(l);\n      let dipx;\n\n      if (window.screen.deviceXDPI) {\n        dipx = window.screen.deviceXDPI;\n      } else {\n        dipx = 100;\n      }\n\n      console.log(dipx); //l=l*25.4/dipx/1000//m\n      //console.log(l)\n\n      let scale = this.props.distance * 1000 / (l * 25.4 / dipx / 1000);\n      console.log(scale);\n\n      if (scale > 591657550.5) {\n        this.setState({\n          zoom: 1\n        });\n      } else if (scale > 295828775.3) {\n        this.setState({\n          zoom: 2\n        });\n      } else if (scale > 147914387.6) {\n        this.setState({\n          zoom: 3\n        });\n      } else if (scale > 73957193.82) {\n        this.setState({\n          zoom: 4\n        });\n      } else if (scale > 36978596.91) {\n        this.setState({\n          zoom: 5\n        });\n      } else if (scale > 18489298.45) {\n        this.setState({\n          zoom: 6\n        });\n      } else if (scale > 9244649.227) {\n        this.setState({\n          zoom: 7\n        });\n      } else if (scale > 4622324.614) {\n        this.setState({\n          zoom: 8\n        });\n      } else if (scale > 2311162.307) {\n        this.setState({\n          zoom: 9\n        });\n      } else if (scale > 1155581.153) {\n        this.setState({\n          zoom: 10\n        });\n      } else if (scale > 577790.5767) {\n        this.setState({\n          zoom: 11\n        });\n      } else if (scale > 288895.2884) {\n        this.setState({\n          zoom: 12\n        });\n      } else if (scale > 144447.6442) {\n        this.setState({\n          zoom: 13\n        });\n        console.log(this.state.zoom);\n      } else if (scale > 72223.8220) {\n        this.setState({\n          zoom: 14\n        });\n      } else if (scale > 36111.9110) {\n        this.setState({\n          zoom: 15\n        });\n      } else if (scale > 18055.95552) {\n        this.setState({\n          zoom: 16\n        });\n      } else if (scale > 9027.977761) {\n        this.setState({\n          zoom: 17\n        });\n      } else if (scale > 4513.988880) {\n        this.setState({\n          zoom: 18\n        });\n      } else if (scale > 2256.994440) {\n        this.setState({\n          zoom: 19\n        });\n      } else if (scale > 1128.497220) {\n        this.setState({\n          zoom: 20\n        });\n      }\n    }\n  }\n\n  generatePath(item) {\n    return `${item.title.replace(/ /g, \"-\")}-${item._id}`;\n  }\n\n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    //const {location}=this.props;\n    console.log(this.props.taskList.listData[0]);\n    return React.createElement(\"div\", {\n      className: \"mapbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, Object.assign({\n      centerAroundCurrentLocation: true,\n      google: this.props.google\n    }, this.props, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), this.props.locations === '' ? React.createElement(Marker, {\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }) : React.createElement(Marker, {\n      position: this.props.locations,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), this.props.taskList.listData.map((item, index) => React.createElement(Marker //   {...this.props}\n    //place_id={this.props.locations}\n    , {\n      position: item.place_coordinate,\n      onClick: this.onMarkerClick,\n      name: item.title,\n      time: dateFormatter(item.postDate),\n      poster: item.posterName,\n      price: item.price,\n      profilephoto: 'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg',\n      icon: markerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), this.props.taskList.listData.map((item, index) => React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedPlace.profilephoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--top__earn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"$\", this.state.selectedPlace.price))), React.createElement(\"div\", {\n      className: \"mapbox--infoWindow--bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Posted on \", this.state.selectedPlace.time), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Posted by \", this.state.selectedPlace.poster), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.history.push(`${this.props.match.path}/${this.generatePath(item)}`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"View Task\")))))));\n  }\n\n} // GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n  return {\n    locations: state.locations.locations,\n    distance: state.distance.distance,\n    price: state.price.price,\n    taskList: state.taskList\n  };\n}\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\nexport default connect(mapStateToProps, {\n  changeDistance,\n  changePrice,\n  changeLocation\n})(withRouter(MapBox)); // export default","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/browse-tasks-right/map-box/map-box.js"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","Geocoder","CurrentLocation","markerIcon","dateFormatter","connect","reqTaskList","changeDistance","changePrice","changeLocation","withRouter","BASE","global","constants","MapBox","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","markers","changed","zoom","newsNum","componentDidUpdate","prevProps","prevState","taskList","listData","forceUpdate","locations","console","log","distance","l","document","querySelector","clientWidth","dipx","window","screen","deviceXDPI","scale","generatePath","item","title","replace","_id","render","google","map","index","place_coordinate","postDate","posterName","price","profilephoto","name","time","poster","history","push","match","path","mapStateToProps","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,mBAA/D;AACA,OAAOC,eAAP,MAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,cAAtC,QAA4D,qBAA5D;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAWC,MAAM,CAACC,SAAxB;AACA,OAAO,MAAMC,MAAN,SAAqBjB,SAArB,CAA+B;AACpCkB,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAgGnBC,aAhGmB,GAgGH,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEL,KADH;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAjGiB;;AAAA,SAuGnBC,OAvGmB,GAuGTR,KAAK,IAAI;AACjB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KA9GkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CADE;AAEXH,MAAAA,iBAAiB,EAAE,KAFR;AAEgB;AAC3BD,MAAAA,YAAY,EAAE,EAHH;AAGgB;AAC3BD,MAAAA,aAAa,EAAE,EAJJ;AAIgB;AAC3BM,MAAAA,OAAO,EAAE,KALE;AAMXC,MAAAA,IAAI,EAAE,EANK;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD,GAZmC,CAapC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;AAC7C;AACA,QAAID,SAAS,CAACE,QAAV,CAAmBC,QAAnB,KAAgC,KAAKlB,KAAL,CAAWiB,QAAX,CAAoBC,QAAxD,EAAkE;AAChE,WAAKC,WAAL;AACD;;AACD,QAAIJ,SAAS,CAACK,SAAV,KAAwB,KAAKpB,KAAL,CAAWoB,SAAvC,EAAkD;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAKH,WAAL;AACD;;AACD,QAAIJ,SAAS,CAACQ,QAAV,KAAuB,KAAKvB,KAAL,CAAWuB,QAAtC,EAAgD;AAAC;AAC/CF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKtB,KAAL,CAAWuB,QAAnC;AACA,UAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,WAA1C,CAF8C,CAEQ;;AACtDN,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,UAAII,IAAJ;;AACA,UAAIC,MAAM,CAACC,MAAP,CAAcC,UAAlB,EAA8B;AAC5BH,QAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcC,UAArB;AACD,OAFD,MAEO;AACLH,QAAAA,IAAI,GAAG,GAAP;AACD;;AAEDP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAX8C,CAY9C;AACA;;AACA,UAAII,KAAK,GAAG,KAAKhC,KAAL,CAAWuB,QAAX,GAAsB,IAAtB,IAA8BC,CAAC,GAAG,IAAJ,GAAWI,IAAX,GAAkB,IAAhD,CAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,UAAIA,KAAK,GAAG,WAAZ,EAAyB;AACvB,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFD,MAEO,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB;AACD,OAHM,MAGA,IAAIoB,KAAK,GAAG,UAAZ,EAAwB;AAC7B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,UAAZ,EAAwB;AAC7B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD,OAFM,MAEA,IAAIoB,KAAK,GAAG,WAAZ,EAAyB;AAC9B,aAAK5B,QAAL,CAAc;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD;AAGF;AAEF;;AAgBDqB,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,WAAQ,GAAEA,IAAI,CAACC,KAAL,CAAWC,OAAX,CACR,IADQ,EAER,GAFQ,CAGR,IAAGF,IAAI,CAACG,GAAI,EAHd;AAID;;AAGDC,EAAAA,MAAM,GAAG;AACP;AACA;AAEAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWiB,QAAX,CAAoBC,QAApB,CAA6B,CAA7B,CAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAEE,MAAA,2BAA2B,MAF7B;AAGE,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWuC;AAHrB,OAIM,KAAKvC,KAJX,EAKM,KAAKS,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUG,KAAKT,KAAL,CAAWoB,SAAX,KAAyB,EAAzB,GAA8B,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GAAqE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoB,SAA7B;AAAwC,MAAA,IAAI,EAAE,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVxE,EAaG,KAAKpB,KAAL,CAAWiB,QAAX,CAAoBC,QAApB,CAA6BsB,GAA7B,CAAiC,CAACN,IAAD,EAAOO,KAAP,KAChC,oBAAC,MAAD,CACE;AACA;AAFF;AAGE,MAAA,QAAQ,EAAEP,IAAI,CAACQ,gBAHjB;AAIE,MAAA,OAAO,EAAE,KAAKzC,aAJhB;AAKE,MAAA,IAAI,EAAEiC,IAAI,CAACC,KALb;AAME,MAAA,IAAI,EAAE/C,aAAa,CAAC8C,IAAI,CAACS,QAAN,CANrB;AAOE,MAAA,MAAM,EAAET,IAAI,CAACU,UAPf;AAQE,MAAA,KAAK,EAAEV,IAAI,CAACW,KARd;AASE,MAAA,YAAY,EAAE,+EAThB;AAUE,MAAA,IAAI,EAAE1D,UAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAbH,EA4BG,KAAKa,KAAL,CAAWiB,QAAX,CAAoBC,QAApB,CAA6BsB,GAA7B,CAAiC,CAACN,IAAD,EAAOO,KAAP,KAEhC,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWH,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFtB;AAGE,MAAA,OAAO,EAAE,KAAKC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWJ,aAAX,CAAyByC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,KAAKrC,KAAL,CAAWJ,aAAX,CAAyBwC,KAAjC,CADF,CAJF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKpC,KAAL,CAAWJ,aAAX,CAAyB0C,IAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKtC,KAAL,CAAWJ,aAAX,CAAyB2C,IAAvC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiB,KAAKvC,KAAL,CAAWJ,aAAX,CAAyB4C,MAA1C,CAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,aAAKjD,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,CACG,GAAE,KAAKnD,KAAL,CAAWoD,KAAX,CAAiBC,IAAK,IAAG,KAAKpB,YAAL,CAAkBC,IAAlB,CAAwB,EADtD;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CATF,CANF,CAFD,CA5BH,CADF,CADF;AA+JD;;AA7RmC,C,CAgStC;AACA;AACA;;AAEA,SAASoB,eAAT,CAAyB7C,KAAzB,EAAgC;AAC9B,SAAO;AACLW,IAAAA,SAAS,EAAEX,KAAK,CAACW,SAAN,CAAgBA,SADtB;AAELG,IAAAA,QAAQ,EAAEd,KAAK,CAACc,QAAN,CAAeA,QAFpB;AAGLsB,IAAAA,KAAK,EAAEpC,KAAK,CAACoC,KAAN,CAAYA,KAHd;AAIL5B,IAAAA,QAAQ,EAAER,KAAK,CAACQ;AAJX,GAAP;AAMD;;AAEDnC,gBAAgB,CAAC;AACfyE,EAAAA,MAAM,EAAE;AADO,CAAD,CAAhB,CAEGzD,MAFH;AAGA,eAAeT,OAAO,CAACiE,eAAD,EAAkB;AACtC/D,EAAAA,cADsC;AACtBC,EAAAA,WADsB;AACTC,EAAAA;AADS,CAAlB,CAAP,CAEZC,UAAU,CAACI,MAAD,CAFE,CAAf,C,CAIA","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper, InfoWindow, Marker, Geocoder } from 'google-maps-react';\nimport CurrentLocation from './map';\nimport markerIcon from \"../../../../assets/markerIcon.png\";\nimport \"./map-box.scss\";\nimport dateFormatter from \"../../../../utils/date-formatter\"\nimport { connect } from 'react-redux';\nimport { reqTaskList } from \"../../../../api/api\";\nimport { changeDistance, changePrice, changeLocation } from '../../redux/actions'\nimport { withRouter } from \"react-router-dom\";\n// TODO @JUbi\n// const mapStyles = {\n//   map: {\n\n//     width: '80%',\n//     height: '100%'\n//   }\n// };\n// const infoStyles = {\n//   info:{\n//     // margin:0 auto,\n\n//     opacity:'0.85'\n//   }\n// } \nconst { BASE } = global.constants;\nexport class MapBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: [false, false, false],\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n      changed: false,\n      zoom: '',\n      newsNum: '',\n    };\n  }\n  //   async componentDidMount() {\n  //   console.log(this.props.)\n  // try {\n  //   const result = await reqTaskList();\n  //   if (result.status === 200) {\n  //     this.props.addTaskList(result.data.taskList);\n  //     this.setState({ newsNum: result.data.taskList.length });\n  //   }\n  // } catch (error) {\n  //   alert(\"failed to request task list\");\n  // }\n  //   }\n  async componentDidUpdate(prevProps, prevState) {\n    // console.log(prevProps)\n    if (prevProps.taskList.listData !== this.props.taskList.listData) {\n      this.forceUpdate();\n    }\n    if (prevProps.locations !== this.props.locations) {\n      console.log(\"changed\")\n      this.forceUpdate();\n    }\n    if (prevProps.distance !== this.props.distance) {//calculate zoom \n      console.log('distance', this.props.distance)\n      let l = document.querySelector('.mapbox').clientWidth;//px\n      console.log(l)\n      let dipx;\n      if (window.screen.deviceXDPI) {\n        dipx = window.screen.deviceXDPI;\n      } else {\n        dipx = 100;\n      }\n\n      console.log(dipx)\n      //l=l*25.4/dipx/1000//m\n      //console.log(l)\n      let scale = this.props.distance * 1000 / (l * 25.4 / dipx / 1000);\n      console.log(scale)\n      if (scale > 591657550.5) {\n        this.setState({ zoom: 1 });\n      } else if (scale > 295828775.3) {\n        this.setState({ zoom: 2 });\n      } else if (scale > 147914387.6) {\n        this.setState({ zoom: 3 });\n      } else if (scale > 73957193.82) {\n        this.setState({ zoom: 4 });\n      } else if (scale > 36978596.91) {\n        this.setState({ zoom: 5 });\n      } else if (scale > 18489298.45) {\n        this.setState({ zoom: 6 });\n      } else if (scale > 9244649.227) {\n        this.setState({ zoom: 7 });\n      } else if (scale > 4622324.614) {\n        this.setState({ zoom: 8 });\n      } else if (scale > 2311162.307) {\n        this.setState({ zoom: 9 });\n      } else if (scale > 1155581.153) {\n        this.setState({ zoom: 10 });\n      } else if (scale > 577790.5767) {\n        this.setState({ zoom: 11 });\n      } else if (scale > 288895.2884) {\n        this.setState({ zoom: 12 });\n      } else if (scale > 144447.6442) {\n        this.setState({ zoom: 13 });\n        console.log(this.state.zoom)\n      } else if (scale > 72223.8220) {\n        this.setState({ zoom: 14 });\n      } else if (scale > 36111.9110) {\n        this.setState({ zoom: 15 });\n      } else if (scale > 18055.95552) {\n        this.setState({ zoom: 16 });\n      } else if (scale > 9027.977761) {\n        this.setState({ zoom: 17 });\n      } else if (scale > 4513.988880) {\n        this.setState({ zoom: 18 });\n      } else if (scale > 2256.994440) {\n        this.setState({ zoom: 19 });\n      } else if (scale > 1128.497220) {\n        this.setState({ zoom: 20 });\n      }\n\n\n    }\n\n  }\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  generatePath(item) {\n    return `${item.title.replace(\n      / /g,\n      \"-\"\n    )}-${item._id}`;\n  }\n\n\n  render() {\n    // const infoStyle = Object.assign({}, infoStyles.info);\n    //const {location}=this.props;\n\n    console.log(this.props.taskList.listData[0])\n\n    return (\n      <div className=\"mapbox\">\n        <CurrentLocation\n\n          centerAroundCurrentLocation\n          google={this.props.google}\n          {...this.props}\n          {...this.state}\n\n        >\n          {/* <Marker  address={this.props.locations} name={'current location'} /> */}\n\n          {this.props.locations === '' ? <Marker name={'current location'} /> : <Marker position={this.props.locations} name={'current location'} />}\n          {/* {this.props.taskList.listData.sort((a, b) => Date.parse(b.postDate) - Date.parse(a.postDate)).map((item, index) =>()} */}\n\n          {this.props.taskList.listData.map((item, index) => (\n            <Marker\n              //   {...this.props}\n              //place_id={this.props.locations}\n              position={item.place_coordinate}\n              onClick={this.onMarkerClick}\n              name={item.title}\n              time={dateFormatter(item.postDate)}\n              poster={item.posterName}\n              price={item.price}\n              profilephoto={'https://pbs.twimg.com/profile_images/1036730403514736650/PCRxFiEt_400x400.jpg'}\n              icon={markerIcon}\n            />\n\n          ))}\n          {this.props.taskList.listData.map((item, index) => (\n\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n\n              <div className=\"mapbox--infoWindow\">\n                <div className=\"mapbox--infoWindow--top\">\n                  <div className=\"mapbox--infoWindow--top__img\">\n                    <img src={this.state.selectedPlace.profilephoto} />\n                  </div>\n                  <div className=\"mapbox--infoWindow--top__earn\">\n                    <span>${this.state.selectedPlace.price}</span>\n                  </div>\n                </div>\n                <div className=\"mapbox--infoWindow--bottom\">\n                  <h4>{this.state.selectedPlace.name}</h4>\n                  <p>Posted on {this.state.selectedPlace.time}</p>\n                  <span>Posted by {this.state.selectedPlace.poster}</span>\n                  <button onClick={() => {\n                    this.props.history.push(\n                      `${this.props.match.path}/${this.generatePath(item)}`\n                    );\n                  }}>View Task</button>\n                </div>\n              </div>\n            </InfoWindow>\n          ))}\n\n\n          {/* \n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow> */}\n\n          {/* <Marker\n              position={{ lat: -33.900128, lng:  151.224562 }}\n              onClick={this.onMarkerClick}\n              name={'Wall mount 65 inch TV'} \n              price={'$50'}\n              time={'Due in 6 hours'}\n              poster={'post by Purushi,21 hours ago'}\n              profilephoto={'https://pbs.twimg.com/media/Dyg-PPzXcAAY5Wv?format=jpg&name=small'}\n              icon={markerIcon}\n          /> */}\n          {/* <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            \n            <div  className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto}/>\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\">\n                <span>{this.state.selectedPlace.price}</span>\n                </div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow> */}\n          {/* \n          <Marker\n            className=\"mapbox__maker\"\n            //address={[{long_name:\"Kensington\",short_name:\"Kensington\"},{long_name:\"Randwick City Council\",short_name:\"Randwick\"},{long_name:\"New South Wales\",short_name:\"NSW\"},{long_name:\"Australia\",short_name:\"AU\"},{long_name:\"2033\",short_name:\"2033\"}]}\n            position={{ lat: -33.912605, lng: 151.235999 }}\n            onClick={this.onMarkerClick}\n            name={'Tree looper with tree mulcher'}\n            price={'$140'}\n            time={'Due 12 hours ago'}\n            poster={'post by papa H,21 hours ago'}\n            profilephoto={'https://pbs.twimg.com/media/Dyg6-4xWoAEUNut?format=jpg&name=small'}\n            icon={markerIcon}\n          />\n          <InfoWindow\n\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div className=\"mapbox--infoWindow\">\n              <div className=\"mapbox--infoWindow--top\">\n                <div className=\"mapbox--infoWindow--top__img\">\n                  <img src={this.state.selectedPlace.profilephoto} />\n                </div>\n                <div className=\"mapbox--infoWindow--top__earn\"><p>EARN</p><span>{this.state.selectedPlace.price}2</span></div>\n              </div>\n              <div className=\"mapbox--infoWindow--bottom\">\n                <h4>{this.state.selectedPlace.name}</h4>\n                <p>{this.state.selectedPlace.time}</p>\n                <span>{this.state.selectedPlace.poster}</span>\n                <button>View Task</button>\n              </div>\n            </div>\n          </InfoWindow> */}\n        </CurrentLocation>\n\n\n      </div>\n    );\n  }\n}\n\n// GoogleApiWrapper({\n//   apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n// })(MapBox);\n\nfunction mapStateToProps(state) {\n  return {\n    locations: state.locations.locations,\n    distance: state.distance.distance,\n    price: state.price.price,\n    taskList: state.taskList\n  }\n}\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyDy7fG8VcN_upR7UZ7lC63h7cVbVwYu558'\n})(MapBox);\nexport default connect(mapStateToProps, {\n  changeDistance, changePrice, changeLocation\n})(withRouter(MapBox));\n\n// export default "]},"metadata":{},"sourceType":"module"}