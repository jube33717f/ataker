{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/task-menu/autocomplete.js\";\nimport React, { Component } from \"react\";\nimport reducer from \"../../../redux/reducer\";\nexport default class AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props && this.props.google) {\n      const google = this.props.google;\n      const maps = google.maps;\n      var autocomplete = new maps.places.Autocomplete(this.state.input); // autocomplete.bindTo('bounds', map);\n\n      autocomplete.setFields(['place_id', 'geometry', 'name', 'formatted_address']);\n    }\n  }\n\n  render() {\n    return React.createElement(\"input\", {\n      id: \"pac-input\",\n      class: \"controls\",\n      type: \"text\",\n      placeholder: \"Enter a location\",\n      onChange: e => {\n        this.setState({\n          input: e.target.value\n        });\n      },\n      value: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  } //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n\n}","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/browse-tasks/task-menu/autocomplete.js"],"names":["React","Component","reducer","AutoComplete","constructor","props","state","input","componentDidMount","google","maps","autocomplete","places","Autocomplete","setFields","render","e","setState","target","value"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAGA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAoC;AAC/CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC;AADC,KAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,QAAI,KAAKH,KAAL,IAAc,KAAKA,KAAL,CAAWI,MAA7B,EAAoC;AAChC,YAAMA,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAA1B;AACA,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAIC,YAAY,GAAG,IAAID,IAAI,CAACE,MAAL,CAAYC,YAAhB,CAA6B,KAAKP,KAAL,CAAWC,KAAxC,CAAnB,CAHgC,CAIjC;;AACCI,MAAAA,YAAY,CAACG,SAAb,CAAuB,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,EAAiC,mBAAjC,CAAvB;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACA;AAAO,MAAA,EAAE,EAAC,WAAV;AACA,MAAA,KAAK,EAAC,UADN;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,WAAW,EAAC,kBAHZ;AAIA,MAAA,QAAQ,EAAGC,CAAD,IAAK;AACX,aAAKC,QAAL,CAAc;AAACV,UAAAA,KAAK,EAACS,CAAC,CAACE,MAAF,CAASC;AAAhB,SAAd;AACH,OAND;AAOA,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAUH,GA3B8C,CA8B3C;;;AA9B2C","sourcesContent":["\nimport React, { Component } from \"react\";\nimport reducer from \"../../../redux/reducer\";\n\n\nexport default class AutoComplete extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            input:''\n        }\n    }\n    componentDidMount(){\n        if (this.props && this.props.google){\n            const google = this.props.google;\n            const maps = google.maps;\n            var autocomplete = new maps.places.Autocomplete(this.state.input);\n           // autocomplete.bindTo('bounds', map);\n            autocomplete.setFields(['place_id', 'geometry', 'name', 'formatted_address']);\n        }\n    }\n    render() {\n        return (\n        <input id=\"pac-input\"\n        class=\"controls\"\n        type=\"text\"\n        placeholder=\"Enter a location\"\n        onChange={(e)=>{\n            this.setState({input:e.target.value})\n        }}\n        value={this.state.input}/>\n        );\n    }\n        \n\n        //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n    \n}"]},"metadata":{},"sourceType":"module"}