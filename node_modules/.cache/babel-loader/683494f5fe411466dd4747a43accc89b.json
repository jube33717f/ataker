{"ast":null,"code":"import { ajax } from \"./ajax\";\nimport { taskTable, userTable, offerTable } from \"../fakeData\";\nimport '../config';\nconst {\n  BASE\n} = global.constants; // TODO @SONIA\n// reqPostTask\n\nexport const reqLogin = (email, password) => {\n  return ajax(`${BASE}/login`, {\n    email,\n    password\n  }, \"POST\");\n};\nexport const reqSignUp = userInfo => {\n  return ajax(`${BASE}/signup`, userInfo, \"POST\");\n};\nexport const reqTaskList = (page, pageSize) => {\n  return ajax(BASE + \"/task/list\", {\n    page,\n    pageSize\n  }); //模拟后台数据库对多张表查询后返回的数据\n\n  const mockedData = taskTable.data.map(task => {\n    return { ...task,\n      offers: task.offers ? `${task.offers.length} offer${task.offers.length > 1 ? 's' : ''}` : `0 offer`,\n      //注意这里task offer可能是null\n      photo: userTable.data.find(obj => obj.id === task.posterId).photo\n    };\n  });\n  return Promise.resolve({\n    status: 0,\n    data: mockedData\n  });\n};\nexport const reqTaskDetail = taskId => {\n  return ajax(BASE + `/task/${taskId}`); //模拟后台数据库对多张表查询后返回的数据\n\n  const taskData = taskTable.data[parseInt(taskId)];\n  let offers = [];\n\n  if (taskData.offers) {\n    offers = taskData.offers.map(offerId => offerTable.data.find(obj => obj.id === offerId));\n  }\n\n  offers = offers.map(offer => ({ ...offer,\n    ...userTable.data.find(obj => obj.id === offer.taskerId),\n    messages: offer.messages.map(message => ({ ...message,\n      ...userTable.data.find(obj => obj.id === message.senderId)\n    }))\n  }));\n  const mockedData = { ...taskTable.data[parseInt(taskId)],\n    posterName: userTable.data.find(obj => obj.id === taskData.posterId).username,\n    posterEmail: userTable.data.find(obj => obj.id === taskData.posterId).email,\n    // taskerEmail: taskData.offers ? taskData.offers[0].email : '',//userTable.data.find(obj => obj.id === taskData.offers[0].posterId).email : '',\n    offers: offers,\n    photo: userTable.data.find(obj => obj.id === taskData.posterId).photo,\n    questions: taskData.questions.map(question => ({ ...question,\n      ...userTable.data.find(obj => obj.id === question.senderId),\n      replies: question.replies.map(reply => ({ ...reply,\n        ...userTable.data.find(obj => obj.id === reply.senderId)\n      }))\n    }))\n  };\n  return Promise.resolve({\n    status: 0,\n    data: mockedData\n  });\n};\nexport const reqPostTask = (email, taskData) => {\n  return ajax(BASE + `/task/add`, {\n    email: email,\n    taskData: taskData\n  }, \"POST\");\n};\nexport const reqUpdateTask = (taskId, taskData) => {\n  return ajax(BASE + `/task/update/${taskId}`, taskData, \"PUT\"); // if method is post， 405 method not allowed！\n  // const taskData = taskTable.data.find(task => task.id === taskId);\n  // const mockedData = { ...taskData, ...updatedData }\n  // return Promise.resolve({ status: 0, data: mockedData });\n};\nexport const reqUserInfo = email => {\n  return ajax(BASE + \"/user/info\", {\n    email\n  }); // //模拟后台数据库对多张表查询后返回的数据\n  // const mockedData = userTable.data.find(obj => {\n  //   return obj.email === userEmail;\n  // });\n  // return Promise.resolve({\n  //   status: Number(mockedData === undefined),\n  //   data: mockedData\n  // });\n};\nexport const reqUpdateUser = (email, userData) => {\n  return ajax(BASE + '/user/update', {\n    email,\n    userData\n  }, 'PUT'); // return Promise.resolve({ status: 0, data: userData });\n  // 一定要return，否则调用reqxxx函数时会出现cannot read property status of undefined错误\n};\nexport const reqUploadAvatar = (email, formData) => {\n  return ajax(BASE + `/user/upload-avatar/${email}`, formData, 'POST', true); // return Promise.resolve({ status: 0, data: \"/logo192.png\" });\n};\nexport const reqMakeOffer = (email, offerData) => {\n  return ajax(BASE + '/offer/add', {\n    email,\n    offerData\n  }, 'POST');\n};\nexport const reqPostQuestion = (email, questionData) => {\n  return ajax(BASE + '/task/add-question', {\n    email,\n    questionData\n  }, 'POST');\n};\nexport const reqReplyQuestion = (email, questionData) => {\n  return ajax(BASE + '/task/reply-question', {\n    email,\n    questionData\n  }, 'POST');\n};\nexport const reqPostOfferMessage = (email, messageData) => {\n  return ajax(BASE + '/offer/add-message', {\n    email,\n    messageData\n  }, 'POST');\n};","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/api/api.js"],"names":["ajax","taskTable","userTable","offerTable","BASE","global","constants","reqLogin","email","password","reqSignUp","userInfo","reqTaskList","page","pageSize","mockedData","data","map","task","offers","length","photo","find","obj","id","posterId","Promise","resolve","status","reqTaskDetail","taskId","taskData","parseInt","offerId","offer","taskerId","messages","message","senderId","posterName","username","posterEmail","questions","question","replies","reply","reqPostTask","reqUpdateTask","reqUserInfo","reqUpdateUser","userData","reqUploadAvatar","formData","reqMakeOffer","offerData","reqPostQuestion","questionData","reqReplyQuestion","reqPostOfferMessage","messageData"],"mappings":"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","sourcesContent":["import { ajax } from \"./ajax\";\nimport { taskTable, userTable, offerTable } from \"../fakeData\";\nimport '../config';\nconst { BASE } = global.constants;\n\n// TODO @SONIA\n// reqPostTask\nexport const reqLogin = (email, password) => {\n  return ajax(`${BASE}/login`, { email, password }, \"POST\");\n};\n\nexport const reqSignUp = userInfo => {\n  return ajax(`${BASE}/signup`, userInfo, \"POST\");\n};\n\nexport const reqTaskList = (page, pageSize) => {\n  return ajax(BASE + \"/task/list\", { page, pageSize });\n\n  //模拟后台数据库对多张表查询后返回的数据\n  const mockedData = taskTable.data.map(task => {\n    return {\n      ...task,\n      offers: task.offers ? `${task.offers.length} offer${task.offers.length > 1 ? 's' : ''}` : `0 offer`, //注意这里task offer可能是null\n      photo: userTable.data.find(obj => obj.id === task.posterId).photo\n    };\n  });\n\n  return Promise.resolve({ status: 0, data: mockedData });\n};\n\n\nexport const reqTaskDetail = taskId => {\n  return ajax(BASE + `/task/${taskId}`);\n\n  //模拟后台数据库对多张表查询后返回的数据\n  const taskData = taskTable.data[parseInt(taskId)];\n  let offers = [];\n  if (taskData.offers) {\n    offers = taskData.offers.map(offerId =>\n      offerTable.data.find(obj => obj.id === offerId)\n    );\n  }\n  offers = offers.map(offer => ({\n    ...offer,\n    ...userTable.data.find(obj => obj.id === offer.taskerId),\n    messages: offer.messages.map(message => ({\n      ...message,\n      ...userTable.data.find(obj => obj.id === message.senderId)\n    }))\n  }));\n  const mockedData = {\n    ...taskTable.data[parseInt(taskId)],\n    posterName: userTable.data.find(obj => obj.id === taskData.posterId)\n      .username,\n    posterEmail: userTable.data.find(obj => obj.id === taskData.posterId)\n      .email,\n    // taskerEmail: taskData.offers ? taskData.offers[0].email : '',//userTable.data.find(obj => obj.id === taskData.offers[0].posterId).email : '',\n    offers: offers,\n    photo: userTable.data.find(obj => obj.id === taskData.posterId).photo,\n    questions: taskData.questions.map(question => ({\n      ...question,\n      ...userTable.data.find(obj => obj.id === question.senderId),\n      replies: question.replies.map(reply => ({\n        ...reply,\n        ...userTable.data.find(obj => obj.id === reply.senderId)\n      }))\n    }))\n  };\n  return Promise.resolve({ status: 0, data: mockedData });\n};\n\nexport const reqPostTask = (email, taskData) => {\n  return ajax(BASE + `/task/add`, { email: email, taskData: taskData }, \"POST\");\n}\n\nexport const reqUpdateTask = (taskId, taskData) => {\n  return ajax(BASE + `/task/update/${taskId}`, taskData, \"PUT\");// if method is post， 405 method not allowed！\n\n  // const taskData = taskTable.data.find(task => task.id === taskId);\n  // const mockedData = { ...taskData, ...updatedData }\n  // return Promise.resolve({ status: 0, data: mockedData });\n}\n\nexport const reqUserInfo = email => {\n  return ajax(BASE + \"/user/info\", { email });\n\n  // //模拟后台数据库对多张表查询后返回的数据\n  // const mockedData = userTable.data.find(obj => {\n  //   return obj.email === userEmail;\n  // });\n\n  // return Promise.resolve({\n  //   status: Number(mockedData === undefined),\n  //   data: mockedData\n  // });\n};\n\nexport const reqUpdateUser = (email, userData) => {\n  return ajax(BASE + '/user/update', { email, userData }, 'PUT')\n  // return Promise.resolve({ status: 0, data: userData });\n  // 一定要return，否则调用reqxxx函数时会出现cannot read property status of undefined错误\n}\n\nexport const reqUploadAvatar = (email, formData) => {\n  return ajax(BASE + `/user/upload-avatar/${email}`, formData, 'POST', true)\n  // return Promise.resolve({ status: 0, data: \"/logo192.png\" });\n}\n\nexport const reqMakeOffer = (email, offerData) => {\n  return ajax(BASE + '/offer/add', { email, offerData }, 'POST')\n}\n\nexport const reqPostQuestion = (email, questionData) => {\n  return ajax(BASE + '/task/add-question', { email, questionData }, 'POST')\n}\n\nexport const reqReplyQuestion = (email, questionData) => {\n  return ajax(BASE + '/task/reply-question', { email, questionData }, 'POST')\n}\n\nexport const reqPostOfferMessage = (email, messageData) => {\n  return ajax(BASE + '/offer/add-message', { email, messageData }, 'POST')\n}"]},"metadata":{},"sourceType":"module"}