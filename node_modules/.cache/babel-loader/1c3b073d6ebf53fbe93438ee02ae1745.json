{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/subpages/taskLocationAndTime/taskLocationAndTime.js\";\nimport React, { Component } from \"react\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDesktop } from \"@fortawesome/free-solid-svg-icons\";\nimport InputComponent from \"../../../../hoc/inputComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ValidationHoc from \"../../../../hoc/validationHoc\";\nimport { connect } from \"react-redux\";\nimport { addTask, setValidationHocCheck } from \"../../../../redux/actions\";\nimport { withRouter } from \"react-router-dom\"; // import InputAuto from \"../../../browse-tasks/task-menu/auto-complete\"\n// TODO @SONIA\n\nclass TaskLocationAndTime extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.props.addTask(this.props.values);\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      taskLocation,\n      taskDuedate\n    } = this.props.postTask.taskData;\n    this.props.setHocData({\n      taskLocation,\n      taskDuedate\n    });\n    this.props.setValidationHocCheck(this.props.okToSubmit); // 如果是post a similar task，需要提前加载好数据\n\n    const taskId = this.props.match.params.id;\n\n    if (taskId && !this.props.postTask.taskData.taskLocation && this.props.taskDetail.taskData) {\n      const {\n        dueDate,\n        place\n      } = this.props.taskDetail.taskData.taskDetail;\n      const taskData = {\n        taskLocation: place,\n        taskDuedate: dueDate\n      };\n      this.props.setHocData(taskData);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: `form__content ${this.props.pageMovementDirection}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"taskLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Where do you need it done?\"), React.createElement(\"div\", {\n      className: \"tab-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab-option--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(InputComponent, Object.assign({}, this.props, {\n      name: \"taskLocation\",\n      inputClassName: \"input-option\",\n      errorClassName: \"input-option--hide\",\n      value: \"\",\n      type: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.values.taskLocation !== \"online\" ? \"input-option--dot\" : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"In person\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Select this if you need the Tasker physically there.\"), React.createElement(FontAwesomeIcon, {\n      icon: faMapMarkerAlt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tab-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab-option--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(InputComponent, Object.assign({}, this.props, {\n      name: \"taskLocation\",\n      value: \"online\",\n      type: \"radio\",\n      inputClassName: \"input-option\",\n      errorClassName: \"input-option--hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.values.taskLocation === \"online\" ? \"input-option--dot\" : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"Online\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Select this if the Tasker can do it from home.\"), React.createElement(FontAwesomeIcon, {\n      icon: faDesktop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), this.props.values.taskLocation !== \"online\" && React.createElement(InputComponent, Object.assign({}, this.props, {\n      name: \"taskLocation\",\n      inputClassName: \"input-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form__content--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(InputComponent, Object.assign({}, this.props, {\n      title: \"When do you need it done?\",\n      name: \"taskDuedate\",\n      type: \"date\",\n      inputClassName: \"input-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(state => ({\n  postTask: state.postTask,\n  taskDetail: state.taskDetail\n}), {\n  addTask,\n  setValidationHocCheck\n})(ValidationHoc(withRouter(TaskLocationAndTime), [\"taskLocation\", \"taskDuedate\"]));","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/pages/post-task/subpages/taskLocationAndTime/taskLocationAndTime.js"],"names":["React","Component","faMapMarkerAlt","faDesktop","InputComponent","FontAwesomeIcon","ValidationHoc","connect","addTask","setValidationHocCheck","withRouter","TaskLocationAndTime","constructor","props","componentDidUpdate","prevProps","prevState","JSON","stringify","values","componentDidMount","taskLocation","taskDuedate","postTask","taskData","setHocData","okToSubmit","taskId","match","params","id","taskDetail","dueDate","place","render","pageMovementDirection","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDesktop } from \"@fortawesome/free-solid-svg-icons\";\nimport InputComponent from \"../../../../hoc/inputComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport ValidationHoc from \"../../../../hoc/validationHoc\";\nimport { connect } from \"react-redux\";\nimport { addTask, setValidationHocCheck } from \"../../../../redux/actions\"\nimport { withRouter } from \"react-router-dom\";\n// import InputAuto from \"../../../browse-tasks/task-menu/auto-complete\"\n// TODO @SONIA\nclass TaskLocationAndTime extends Component {\n    constructor(props) {\n        super(props);\n    }\n    async componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n            this.props.addTask(this.props.values)\n        }\n    }\n\n    async componentDidMount() {\n        const { taskLocation, taskDuedate } = this.props.postTask.taskData;\n        this.props.setHocData({ taskLocation, taskDuedate })\n        this.props.setValidationHocCheck(this.props.okToSubmit);\n\n        // 如果是post a similar task，需要提前加载好数据\n        const taskId = this.props.match.params.id\n        if (taskId && !this.props.postTask.taskData.taskLocation && this.props.taskDetail.taskData) {\n            const { dueDate, place } = this.props.taskDetail.taskData.taskDetail;\n            const taskData = { taskLocation: place, taskDuedate: dueDate };\n            this.props.setHocData(taskData);\n        }\n    }\n\n    render() {\n        return (\n            <div className={`form__content ${this.props.pageMovementDirection}`}>\n                <div className=\"form__content--item\">\n\n                    <label htmlFor=\"taskLocation\">Where do you need it done?</label>\n\n                    <div className=\"tab-container\">\n\n                        <div className=\"tab-option\" >\n\n                            <div className=\"tab-option--header\">\n                                <InputComponent {...this.props} name=\"taskLocation\"\n                                    inputClassName=\"input-option\" errorClassName=\"input-option--hide\"\n                                    value=\"\" type=\"radio\" />\n                                <div className={this.props.values.taskLocation !== \"online\" ? \"input-option--dot\" : ''}></div>\n                                In person\n                            </div>\n                            <p>Select this if you need the Tasker physically there.</p>\n                            <FontAwesomeIcon icon={faMapMarkerAlt} />\n                        </div>\n\n                        <div className=\"tab-option\" >\n                            <div className=\"tab-option--header\">\n                                {/* <InputAuto /> */}\n                                <InputComponent {...this.props}\n                                    name=\"taskLocation\" value=\"online\" type=\"radio\"\n                                    inputClassName=\"input-option\" errorClassName=\"input-option--hide\" />\n                                <div className={this.props.values.taskLocation === \"online\" ? \"input-option--dot\" : ''}></div>\n                                Online\n                            </div>\n                            <p>Select this if the Tasker can do it from home.</p>\n                            <FontAwesomeIcon icon={faDesktop} />\n                        </div>\n\n                    </div>\n\n                    {this.props.values.taskLocation !== \"online\"\n                        &&\n                        <InputComponent {...this.props} name=\"taskLocation\" inputClassName=\"input-area\" />\n                    }\n\n                </div>\n\n                <div className=\"form__content--item\">\n                    <InputComponent {...this.props}\n                        title=\"When do you need it done?\" name=\"taskDuedate\" type=\"date\"\n                        inputClassName=\"input-area\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({ postTask: state.postTask, taskDetail: state.taskDetail }), { addTask, setValidationHocCheck })(\n    ValidationHoc(withRouter(TaskLocationAndTime), [\"taskLocation\", \"taskDuedate\"]))\n"]},"metadata":{},"sourceType":"module"}