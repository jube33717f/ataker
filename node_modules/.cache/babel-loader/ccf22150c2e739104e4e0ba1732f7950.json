{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER, ADD_TASK, CLEAR_POST_TASK, SET_VALIDATION_HOC_CHECK, ADD_TASK_DETAIL, CLEAR_TASK_DETAIL, ADD_USER_ROLE, RELOAD_TASK_DETAIL, RELOAD_TASK_LIST, ADD_OFFER_DETAIL, CLEAR_OFFER_DETAIL, ADD_TASK_LIST } from \"./action-types\";\nimport locations from '../pages/browse-tasks/redux/reducers/location'; //jubi:add value\n\nimport price from '../pages/browse-tasks/redux/reducers/price'; //jubi:add value\n\nimport distance from '../pages/browse-tasks/redux/reducers/distance'; //jubi:add value\n\nimport inPerson from '../pages/browse-tasks/redux/reducers/inPerson'; //jubi:add value\n\nconst initUser = localStorage.getItem(\"user\") ? {\n  email: localStorage.getItem(\"user\")\n} : {};\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return {\n        email: action.email\n      } || { ...state,\n        errMsg: \"unknown error\"\n      };\n\n    case ERROR_MSG:\n      const errMsg = action.msg;\n      return { ...state,\n        errMsg\n      };\n\n    case LOGOUT_USER:\n      return {};\n\n    case CHECK_USER:\n      const readyToBid = action.readyToBid;\n      return { ...state,\n        readyToBid\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initPostTask = {\n  taskData: ''\n};\n\nfunction postTask(state = initPostTask, action) {\n  switch (action.type) {\n    case ADD_TASK:\n      const {\n        taskData\n      } = action;\n      return { ...state,\n        taskData: { ...state.taskData,\n          ...taskData\n        }\n      };\n\n    case SET_VALIDATION_HOC_CHECK:\n      const {\n        validationHocCheck\n      } = action;\n      return { ...state,\n        validationHocCheck\n      };\n\n    case CLEAR_POST_TASK:\n      return initPostTask;\n\n    default:\n      return state;\n  }\n}\n\nconst initTaskDetail = {\n  taskData: ''\n};\n\nfunction taskDetail(state = initTaskDetail, action) {\n  switch (action.type) {\n    case ADD_TASK_DETAIL:\n      const {\n        taskData\n      } = action;\n      return { ...state,\n        taskData: { ...state.taskData,\n          ...taskData\n        }\n      };\n\n    case CLEAR_TASK_DETAIL:\n      return initTaskDetail;\n\n    case RELOAD_TASK_DETAIL:\n      return { ...state,\n        readyToReload: action.readyToReload\n      };\n\n    case ADD_USER_ROLE:\n      return { ...state,\n        userRole: action.userRole\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initTaskList = {\n  listData: []\n};\n\nfunction taskList(state = initTaskList, action) {\n  switch (action.type) {\n    case ADD_TASK_LIST:\n      return { ...state,\n        listData: action.taskList\n      };\n    // case CLEAR_TASK_LIST:\n    //   return initTaskDetail\n\n    case RELOAD_TASK_LIST:\n      return { ...state,\n        readyToReload: action.readyToReload\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initOfferDetail = {\n  offerData: ''\n};\n\nfunction offerDetail(state = initOfferDetail, action) {\n  switch (action.type) {\n    case ADD_OFFER_DETAIL:\n      const {\n        offerData\n      } = action;\n      return { ...state,\n        offerData: { ...state.offerData,\n          ...offerData\n        }\n      };\n\n    case CLEAR_OFFER_DETAIL:\n      return initOfferDetail;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user,\n  postTask,\n  taskDetail,\n  taskList,\n  offerDetail,\n  locations,\n  distance,\n  price,\n  inPerson\n}); //jubi:add value","map":{"version":3,"sources":["/Users/jubi/fullStack/groupProject/0322/xyz.frontend/src/redux/reducer.js"],"names":["combineReducers","LOGIN_USER","ERROR_MSG","LOGOUT_USER","CHECK_USER","ADD_TASK","CLEAR_POST_TASK","SET_VALIDATION_HOC_CHECK","ADD_TASK_DETAIL","CLEAR_TASK_DETAIL","ADD_USER_ROLE","RELOAD_TASK_DETAIL","RELOAD_TASK_LIST","ADD_OFFER_DETAIL","CLEAR_OFFER_DETAIL","ADD_TASK_LIST","locations","price","distance","inPerson","initUser","localStorage","getItem","email","user","state","action","type","errMsg","msg","readyToBid","initPostTask","taskData","postTask","validationHocCheck","initTaskDetail","taskDetail","readyToReload","userRole","initTaskList","listData","taskList","initOfferDetail","offerData","offerDetail"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  LOGIN_USER, ERROR_MSG, LOGOUT_USER, CHECK_USER,\n  ADD_TASK, CLEAR_POST_TASK, SET_VALIDATION_HOC_CHECK,\n  ADD_TASK_DETAIL, CLEAR_TASK_DETAIL, ADD_USER_ROLE,\n  RELOAD_TASK_DETAIL, RELOAD_TASK_LIST,\n  ADD_OFFER_DETAIL, CLEAR_OFFER_DETAIL,\n  ADD_TASK_LIST\n} from \"./action-types\";\nimport locations from '../pages/browse-tasks/redux/reducers/location'//jubi:add value\nimport price from '../pages/browse-tasks/redux/reducers/price'//jubi:add value\nimport distance from '../pages/browse-tasks/redux/reducers/distance'//jubi:add value\nimport inPerson from '../pages/browse-tasks/redux/reducers/inPerson'//jubi:add value\n\nconst initUser = localStorage.getItem(\"user\") ? { email: localStorage.getItem(\"user\") } : {};\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { email: action.email } || { ...state, errMsg: \"unknown error\" };\n    case ERROR_MSG:\n      const errMsg = action.msg;\n      return { ...state, errMsg };\n    case LOGOUT_USER:\n      return {};\n    case CHECK_USER:\n      const readyToBid = action.readyToBid;\n      return { ...state, readyToBid }\n    default:\n      return state;\n  }\n}\n\nconst initPostTask = { taskData: '' };\nfunction postTask(state = initPostTask, action) {\n  switch (action.type) {\n    case ADD_TASK:\n      const { taskData } = action;\n      return { ...state, taskData: { ...state.taskData, ...taskData } }\n    case SET_VALIDATION_HOC_CHECK:\n      const { validationHocCheck } = action;\n      return { ...state, validationHocCheck }\n    case CLEAR_POST_TASK:\n      return initPostTask\n    default:\n      return state;\n  }\n}\n\nconst initTaskDetail = { taskData: '' };\nfunction taskDetail(state = initTaskDetail, action) {\n  switch (action.type) {\n    case ADD_TASK_DETAIL:\n      const { taskData } = action;\n      return { ...state, taskData: { ...state.taskData, ...taskData } }\n    case CLEAR_TASK_DETAIL:\n      return initTaskDetail\n    case RELOAD_TASK_DETAIL:\n      return { ...state, readyToReload: action.readyToReload }\n    case ADD_USER_ROLE:\n      return { ...state, userRole: action.userRole }\n    default:\n      return state\n  }\n}\n\n\nconst initTaskList = { listData: [] };\nfunction taskList(state = initTaskList, action) {\n  switch (action.type) {\n    case ADD_TASK_LIST:\n      return { ...state, listData: action.taskList }\n    // case CLEAR_TASK_LIST:\n    //   return initTaskDetail\n    case RELOAD_TASK_LIST:\n      return { ...state, readyToReload: action.readyToReload }\n    default:\n      return state\n  }\n}\n\n\nconst initOfferDetail = { offerData: '' };\nfunction offerDetail(state = initOfferDetail, action) {\n  switch (action.type) {\n    case ADD_OFFER_DETAIL:\n      const { offerData } = action;\n      return { ...state, offerData: { ...state.offerData, ...offerData } }\n    case CLEAR_OFFER_DETAIL:\n      return initOfferDetail\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ user, postTask, taskDetail, taskList, offerDetail, locations, distance, price, inPerson });//jubi:add value\n"]},"metadata":{},"sourceType":"module"}